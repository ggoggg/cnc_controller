

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 06 02:23:42 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     	FNCALL	_main,_GotoX
   556                           	FNCALL	_main,_LCD_Clear
   557                           	FNCALL	_main,_LCD_Init
   558                           	FNCALL	_main,_LCD_String_xy
   559                           	FNCALL	_main,_sprintf
   560                           	FNCALL	_sprintf,___lldiv
   561                           	FNCALL	_sprintf,___llmod
   562                           	FNCALL	_sprintf,___wmul
   563                           	FNCALL	_sprintf,_isdigit
   564                           	FNCALL	_LCD_Init,_LCD_Command
   565                           	FNCALL	_LCD_Clear,_LCD_Command
   566                           	FNCALL	_GotoX,_LCD_String_xy
   567                           	FNCALL	_GotoX,___awdiv
   568                           	FNCALL	_GotoX,_delay_us
   569                           	FNCALL	_LCD_String_xy,_LCD_Command
   570                           	FNCALL	_LCD_String_xy,_LCD_String
   571                           	FNCALL	_LCD_String,_LCD_Char
   572                           	FNROOT	_main
   573                           	global	_dpowers
   574                           psect	strings,class=STRING,delta=2,noexec
   575                           global __pstrings
   576                           __pstrings:
   577  0003                     stringtab:
   578  0003                     	global    __stringtab
   579                           __stringtab:
   580  0003                     ;	String table - string pointers are 1 byte each
   581                           	btfsc	(btemp+1),7
   582  0003  1BFF               	ljmp	stringcode
   583  0004  280D               	bcf	status,7
   584  0005  1383               	btfsc	(btemp+1),0
   585  0006  187F               	bsf	status,7
   586  0007  1783               	movf	indf,w
   587  0008  0800               	incf fsr
   588  0009  0A84               skipnz
   589  000A  1903               incf btemp+1
   590  000B  0AFF               	return
   591  000C  0008               stringcode:stringdir:
   592  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
   593  000D  3000               movwf pclath
   594  000E  008A               movf fsr,w
   595  000F  0804               incf fsr
   596  0010  0A84               	addwf pc
   597  0011  0782               	global __stringbase
   598                           __stringbase:
   599  0012                     	retlw	0
   600  0012  3400               psect	strings
   601                           	global    __end_of__stringtab
   602                           __end_of__stringtab:
   603  0013                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   604                           	line	358
   605                           _dpowers:
   606  0013                     	retlw	01h
   607  0013  3401               	retlw	0
   608  0014  3400               	retlw	0
   609  0015  3400               	retlw	0
   610  0016  3400               
   611                           	retlw	0Ah
   612  0017  340A               	retlw	0
   613  0018  3400               	retlw	0
   614  0019  3400               	retlw	0
   615  001A  3400               
   616                           	retlw	064h
   617  001B  3464               	retlw	0
   618  001C  3400               	retlw	0
   619  001D  3400               	retlw	0
   620  001E  3400               
   621                           	retlw	0E8h
   622  001F  34E8               	retlw	03h
   623  0020  3403               	retlw	0
   624  0021  3400               	retlw	0
   625  0022  3400               
   626                           	retlw	010h
   627  0023  3410               	retlw	027h
   628  0024  3427               	retlw	0
   629  0025  3400               	retlw	0
   630  0026  3400               
   631                           	retlw	0A0h
   632  0027  34A0               	retlw	086h
   633  0028  3486               	retlw	01h
   634  0029  3401               	retlw	0
   635  002A  3400               
   636                           	retlw	040h
   637  002B  3440               	retlw	042h
   638  002C  3442               	retlw	0Fh
   639  002D  340F               	retlw	0
   640  002E  3400               
   641                           	retlw	080h
   642  002F  3480               	retlw	096h
   643  0030  3496               	retlw	098h
   644  0031  3498               	retlw	0
   645  0032  3400               
   646                           	retlw	0
   647  0033  3400               	retlw	0E1h
   648  0034  34E1               	retlw	0F5h
   649  0035  34F5               	retlw	05h
   650  0036  3405               
   651                           	retlw	0
   652  0037  3400               	retlw	0CAh
   653  0038  34CA               	retlw	09Ah
   654  0039  349A               	retlw	03Bh
   655  003A  343B               
   656                           	global __end_of_dpowers
   657                           __end_of_dpowers:
   658  003B                     	global	_dpowers
   659                           	global	_current_position
   660                           	global	main@F1538
   661                           	global	GotoX@F1519
   662                           	global	_PORTBbits
   663                           _PORTBbits	set	0x6
   664  0006                     	global	_PORTB
   665                           _PORTB	set	0x6
   666  0006                     	global	_PORTD
   667                           _PORTD	set	0x8
   668  0008                     	global	_PORTA
   669                           _PORTA	set	0x5
   670  0005                     	global	_PORTAbits
   671                           _PORTAbits	set	0x5
   672  0005                     	global	_PORTDbits
   673                           _PORTDbits	set	0x8
   674  0008                     	global	_TRISB
   675                           _TRISB	set	0x86
   676  0086                     	global	_TRISD
   677                           _TRISD	set	0x88
   678  0088                     	global	_IOCB
   679                           _IOCB	set	0x96
   680  0096                     	global	_TRISA
   681                           _TRISA	set	0x85
   682  0085                     	global	_ANSELH
   683                           _ANSELH	set	0x189
   684  0189                     	global	_ANSEL
   685                           _ANSEL	set	0x188
   686  0188                     	
   687                           STR_2:	
   688  003B                     	retlw	112	;'p'
   689  003B  3470               	retlw	111	;'o'
   690  003C  346F               	retlw	105	;'i'
   691  003D  3469               	retlw	110	;'n'
   692  003E  346E               	retlw	116	;'t'
   693  003F  3474               	retlw	60	;'<'
   694  0040  343C               	retlw	112	;'p'
   695  0041  3470               	retlw	111	;'o'
   696  0042  346F               	retlw	115	;'s'
   697  0043  3473               	retlw	0
   698  0044  3400               psect	strings
   699                           	
   700                           STR_1:	
   701  0045                     	retlw	112	;'p'
   702  0045  3470               	retlw	111	;'o'
   703  0046  346F               	retlw	105	;'i'
   704  0047  3469               	retlw	110	;'n'
   705  0048  346E               	retlw	116	;'t'
   706  0049  3474               	retlw	62	;'>'
   707  004A  343E               	retlw	112	;'p'
   708  004B  3470               	retlw	111	;'o'
   709  004C  346F               	retlw	115	;'s'
   710  004D  3473               	retlw	0
   711  004E  3400               psect	strings
   712                           	
   713                           STR_4:	
   714  004F                     	retlw	80	;'P'
   715  004F  3450               	retlw	79	;'O'
   716  0050  344F               	retlw	83	;'S'
   717  0051  3453               	retlw	32	;' '
   718  0052  3420               	retlw	88	;'X'
   719  0053  3458               	retlw	58	;':'
   720  0054  343A               	retlw	32	;' '
   721  0055  3420               	retlw	0
   722  0056  3400               psect	strings
   723                           	
   724                           STR_5:	
   725  0057                     	retlw	80	;'P'
   726  0057  3450               	retlw	79	;'O'
   727  0058  344F               	retlw	83	;'S'
   728  0059  3453               	retlw	32	;' '
   729  005A  3420               	retlw	89	;'Y'
   730  005B  3459               	retlw	58	;':'
   731  005C  343A               	retlw	32	;' '
   732  005D  3420               	retlw	0
   733  005E  3400               psect	strings
   734                           	
   735                           STR_6:	
   736  005F                     	retlw	80	;'P'
   737  005F  3450               	retlw	79	;'O'
   738  0060  344F               	retlw	83	;'S'
   739  0061  3453               	retlw	32	;' '
   740  0062  3420               	retlw	90	;'Z'
   741  0063  345A               	retlw	58	;':'
   742  0064  343A               	retlw	32	;' '
   743  0065  3420               	retlw	0
   744  0066  3400               psect	strings
   745                           	
   746                           STR_3:	
   747  0067                     	retlw	72	;'H'
   748  0067  3448               	retlw	69	;'E'
   749  0068  3445               	retlw	76	;'L'
   750  0069  344C               	retlw	76	;'L'
   751  006A  344C               	retlw	79	;'O'
   752  006B  344F               	retlw	0
   753  006C  3400               psect	strings
   754                           	
   755                           STR_7:	
   756  006D                     	retlw	37	;'%'
   757  006D  3425               	retlw	56	;'8'
   758  006E  3438               	retlw	108	;'l'
   759  006F  346C               	retlw	117	;'u'
   760  0070  3475               	retlw	0
   761  0071  3400               psect	strings
   762                           	
   763                           STR_8:	
   764  0072                     	retlw	42	;'*'
   765  0072  342A               	retlw	0
   766  0073  3400               psect	strings
   767                           STR_9	equ	STR_4+6
   768  0055                     ; #config settings
   769                           global __CFG_FOSC$XT
   770                           __CFG_FOSC$XT equ 0x0
   771  0000                     global __CFG_WDTE$OFF
   772                           __CFG_WDTE$OFF equ 0x0
   773  0000                     global __CFG_PWRTE$OFF
   774                           __CFG_PWRTE$OFF equ 0x0
   775  0000                     global __CFG_CP$OFF
   776                           __CFG_CP$OFF equ 0x0
   777  0000                     global __CFG_CPD$OFF
   778                           __CFG_CPD$OFF equ 0x0
   779  0000                     global __CFG_BOREN$OFF
   780                           __CFG_BOREN$OFF equ 0x0
   781  0000                     global __CFG_LVP$OFF
   782                           __CFG_LVP$OFF equ 0x0
   783  0000                     global __CFG_WRT$OFF
   784                           __CFG_WRT$OFF equ 0x0
   785  0000                     	file	"C:\Users\user\AppData\Local\Temp\sf4g."
   786                           	line	#
   787                           psect cinit,class=CODE,delta=2
   788                           global start_initialization
   789                           start_initialization:
   790  07F3                     
   791                           global __initialization
   792                           __initialization:
   793  07F3                     psect	bssBANK1,class=BANK1,space=1,noexec
   794                           global __pbssBANK1
   795                           __pbssBANK1:
   796  00A0                     _current_position:
   797  00A0                            ds      18
   798  00A0                     
   799                           main@F1538:
   800  00B2                            ds      16
   801  00B2                     
   802                           GotoX@F1519:
   803  00C2                            ds      16
   804  00C2                     
   805                           	file	"C:\Users\user\AppData\Local\Temp\sf4g."
   806                           	line	#
   807                           psect clrtext,class=CODE,delta=2
   808                           global clear_ram0
   809                           ;	Called with FSR containing the base address, and
   810                           ;	W with the last address+1
   811                           clear_ram0:
   812  0100                     	clrwdt			;clear the watchdog before getting into this loop
   813  0100  0064               clrloop0:
   814  0101                     	clrf	indf		;clear RAM location pointed to by FSR
   815  0101  0180               	incf	fsr,f		;increment pointer
   816  0102  0A84               	xorwf	fsr,w		;XOR with final address
   817  0103  0604               	btfsc	status,2	;have we reached the end yet?
   818  0104  1903               	retlw	0		;all done for this memory range, return
   819  0105  3400               	xorwf	fsr,w		;XOR again to restore value
   820  0106  0604               	goto	clrloop0		;do the next byte
   821  0107  2901               
   822                           ; Clear objects allocated to BANK1
   823                           psect cinit,class=CODE,delta=2,merge=1
   824                           	bcf	status, 7	;select IRP bank0
   825  07F3  1383               	movlw	low(__pbssBANK1)
   826  07F4  30A0               	movwf	fsr
   827  07F5  0084               	movlw	low((__pbssBANK1)+032h)
   828  07F6  30D2               	fcall	clear_ram0
   829  07F7  120A  118A  2100  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   830                           global end_of_initialization,__end_of__initialization
   831                           
   832                           ;End of C runtime variable initialization code
   833                           
   834                           end_of_initialization:
   835  07FC                     __end_of__initialization:
   836  07FC                     clrf status
   837  07FC  0183               ljmp _main	;jump to C main() function
   838  07FD  120A  118A  2CDB   psect	cstackCOMMON,class=COMMON,space=1,noexec
   839                           global __pcstackCOMMON
   840                           __pcstackCOMMON:
   841  0070                     ?_isdigit:	; 1 bit 
   842  0070                     ?_LCD_Init:	; 1 bytes @ 0x0
   843  0070                     ?_LCD_Clear:	; 1 bytes @ 0x0
   844  0070                     ?_LCD_Command:	; 1 bytes @ 0x0
   845  0070                     ??_LCD_Command:	; 1 bytes @ 0x0
   846  0070                     ??_isdigit:	; 1 bytes @ 0x0
   847  0070                     ?_delay_us:	; 1 bytes @ 0x0
   848  0070                     ?_main:	; 1 bytes @ 0x0
   849  0070                     ?_LCD_Char:	; 1 bytes @ 0x0
   850  0070                     ??_LCD_Char:	; 1 bytes @ 0x0
   851  0070                     	global	?___wmul
   852                           ?___wmul:	; 2 bytes @ 0x0
   853  0070                     	global	?___awdiv
   854                           ?___awdiv:	; 2 bytes @ 0x0
   855  0070                     	global	?___lldiv
   856                           ?___lldiv:	; 4 bytes @ 0x0
   857  0070                     	global	_isdigit$749
   858                           _isdigit$749:	; 1 bytes @ 0x0
   859  0070                     	global	delay_us@val
   860                           delay_us@val:	; 2 bytes @ 0x0
   861  0070                     	global	___wmul@multiplier
   862                           ___wmul@multiplier:	; 2 bytes @ 0x0
   863  0070                     	global	___awdiv@divisor
   864                           ___awdiv@divisor:	; 2 bytes @ 0x0
   865  0070                     	global	___lldiv@divisor
   866                           ___lldiv@divisor:	; 4 bytes @ 0x0
   867  0070                     	ds	1
   868  0070                     	global	isdigit@c
   869                           isdigit@c:	; 1 bytes @ 0x1
   870  0071                     	ds	1
   871  0071                     ??_delay_us:	; 1 bytes @ 0x2
   872  0072                     	global	LCD_Command@cmd
   873                           LCD_Command@cmd:	; 1 bytes @ 0x2
   874  0072                     	global	LCD_Char@dat
   875                           LCD_Char@dat:	; 1 bytes @ 0x2
   876  0072                     	global	___wmul@multiplicand
   877                           ___wmul@multiplicand:	; 2 bytes @ 0x2
   878  0072                     	global	___awdiv@dividend
   879                           ___awdiv@dividend:	; 2 bytes @ 0x2
   880  0072                     	ds	1
   881  0072                     ??_LCD_Init:	; 1 bytes @ 0x3
   882  0073                     ??_LCD_Clear:	; 1 bytes @ 0x3
   883  0073                     ?_LCD_String:	; 1 bytes @ 0x3
   884  0073                     	global	LCD_String@msg
   885                           LCD_String@msg:	; 2 bytes @ 0x3
   886  0073                     	ds	1
   887  0073                     ??___wmul:	; 1 bytes @ 0x4
   888  0074                     ??___awdiv:	; 1 bytes @ 0x4
   889  0074                     	global	___wmul@product
   890                           ___wmul@product:	; 2 bytes @ 0x4
   891  0074                     	global	___lldiv@dividend
   892                           ___lldiv@dividend:	; 4 bytes @ 0x4
   893  0074                     	ds	1
   894  0074                     ?_LCD_String_xy:	; 1 bytes @ 0x5
   895  0075                     ??_LCD_String:	; 1 bytes @ 0x5
   896  0075                     	global	LCD_String_xy@pos
   897                           LCD_String_xy@pos:	; 1 bytes @ 0x5
   898  0075                     	global	___awdiv@counter
   899                           ___awdiv@counter:	; 1 bytes @ 0x5
   900  0075                     	ds	1
   901  0075                     	global	___awdiv@sign
   902                           ___awdiv@sign:	; 1 bytes @ 0x6
   903  0076                     	global	LCD_String_xy@msg
   904                           LCD_String_xy@msg:	; 2 bytes @ 0x6
   905  0076                     	ds	1
   906  0076                     	global	___awdiv@quotient
   907                           ___awdiv@quotient:	; 2 bytes @ 0x7
   908  0077                     	ds	1
   909  0077                     ??_LCD_String_xy:	; 1 bytes @ 0x8
   910  0078                     ??___lldiv:	; 1 bytes @ 0x8
   911  0078                     	ds	1
   912  0078                     	global	LCD_String_xy@row
   913                           LCD_String_xy@row:	; 1 bytes @ 0x9
   914  0079                     	global	___lldiv@quotient
   915                           ___lldiv@quotient:	; 4 bytes @ 0x9
   916  0079                     	ds	1
   917  0079                     	global	LCD_String_xy@location
   918                           LCD_String_xy@location:	; 1 bytes @ 0xA
   919  007A                     	ds	3
   920  007A                     	global	___lldiv@counter
   921                           ___lldiv@counter:	; 1 bytes @ 0xD
   922  007D                     	ds	1
   923  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
   924                           global __pcstackBANK0
   925                           __pcstackBANK0:
   926  0020                     ?_GotoX:	; 1 bytes @ 0x0
   927  0020                     	global	?___llmod
   928                           ?___llmod:	; 4 bytes @ 0x0
   929  0020                     	global	GotoX@point
   930                           GotoX@point:	; 4 bytes @ 0x0
   931  0020                     	global	___llmod@divisor
   932                           ___llmod@divisor:	; 4 bytes @ 0x0
   933  0020                     	ds	4
   934  0020                     	global	GotoX@speed
   935                           GotoX@speed:	; 1 bytes @ 0x4
   936  0024                     	global	___llmod@dividend
   937                           ___llmod@dividend:	; 4 bytes @ 0x4
   938  0024                     	ds	1
   939  0024                     ??_GotoX:	; 1 bytes @ 0x5
   940  0025                     	ds	3
   941  0025                     ??___llmod:	; 1 bytes @ 0x8
   942  0028                     	ds	1
   943  0028                     	global	___llmod@counter
   944                           ___llmod@counter:	; 1 bytes @ 0x9
   945  0029                     	global	GotoX@str
   946                           GotoX@str:	; 16 bytes @ 0x9
   947  0029                     	ds	1
   948  0029                     	global	?_sprintf
   949                           ?_sprintf:	; 2 bytes @ 0xA
   950  002A                     	global	sprintf@f
   951                           sprintf@f:	; 1 bytes @ 0xA
   952  002A                     	ds	5
   953  002A                     ??_sprintf:	; 1 bytes @ 0xF
   954  002F                     	ds	5
   955  002F                     	global	sprintf@flag
   956                           sprintf@flag:	; 1 bytes @ 0x14
   957  0034                     	ds	1
   958  0034                     	global	sprintf@prec
   959                           sprintf@prec:	; 2 bytes @ 0x15
   960  0035                     	ds	2
   961  0035                     	global	sprintf@val
   962                           sprintf@val:	; 4 bytes @ 0x17
   963  0037                     	ds	2
   964  0037                     	global	GotoX@i
   965                           GotoX@i:	; 4 bytes @ 0x19
   966  0039                     	ds	2
   967  0039                     	global	sprintf@ap
   968                           sprintf@ap:	; 1 bytes @ 0x1B
   969  003B                     	ds	1
   970  003B                     	global	sprintf@sp
   971                           sprintf@sp:	; 1 bytes @ 0x1C
   972  003C                     	ds	1
   973  003C                     	global	GotoX@wait
   974                           GotoX@wait:	; 2 bytes @ 0x1D
   975  003D                     	global	sprintf@width
   976                           sprintf@width:	; 2 bytes @ 0x1D
   977  003D                     	ds	2
   978  003D                     	global	sprintf@c
   979                           sprintf@c:	; 1 bytes @ 0x1F
   980  003F                     	ds	1
   981  003F                     ??_main:	; 1 bytes @ 0x20
   982  0040                     	ds	4
   983  0040                     	global	main@str
   984                           main@str:	; 16 bytes @ 0x24
   985  0044                     	ds	16
   986  0044                     	global	main@to
   987                           main@to:	; 18 bytes @ 0x34
   988  0054                     	ds	18
   989  0054                     ;!
   990                           ;!Data Sizes:
   991                           ;!    Strings     57
   992                           ;!    Constant    40
   993                           ;!    Data        0
   994                           ;!    BSS         50
   995                           ;!    Persistent  0
   996                           ;!    Stack       0
   997                           ;!
   998                           ;!Auto Spaces:
   999                           ;!    Space          Size  Autos    Used
  1000                           ;!    COMMON           14     14      14
  1001                           ;!    BANK0            80     70      70
  1002                           ;!    BANK1            80      0      50
  1003                           ;!    BANK3            96      0       0
  1004                           ;!    BANK2            96      0       0
  1005                           
  1006                           ;!
  1007                           ;!Pointer List with Targets:
  1008                           ;!
  1009                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
  1010                           ;!		 -> STR_7(CODE[5]), 
  1011                           ;!
  1012                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1013                           ;!		 -> main@str(BANK0[16]), 
  1014                           ;!
  1015                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1016                           ;!		 -> ?_sprintf(BANK0[2]), 
  1017                           ;!
  1018                           ;!    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
  1019                           ;!		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_6(CODE[8]), STR_5(CODE[8]), 
  1020                           ;!		 -> STR_4(CODE[8]), STR_3(CODE[6]), main@str(BANK0[16]), STR_2(CODE[10]), 
  1021                           ;!		 -> STR_1(CODE[10]), 
  1022                           ;!
  1023                           ;!    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
  1024                           ;!		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_6(CODE[8]), STR_5(CODE[8]), 
  1025                           ;!		 -> STR_4(CODE[8]), STR_3(CODE[6]), main@str(BANK0[16]), STR_2(CODE[10]), 
  1026                           ;!		 -> STR_1(CODE[10]), 
  1027                           ;!
  1028                           
  1029                           
  1030                           ;!
  1031                           ;!Critical Paths under _main in COMMON
  1032                           ;!
  1033                           ;!    _sprintf->___lldiv
  1034                           ;!    ___llmod->___lldiv
  1035                           ;!    _LCD_Init->_LCD_Command
  1036                           ;!    _LCD_Clear->_LCD_Command
  1037                           ;!    _GotoX->_LCD_String_xy
  1038                           ;!    _LCD_String_xy->_LCD_String
  1039                           ;!    _LCD_String->_LCD_Char
  1040                           ;!
  1041                           ;!Critical Paths under _main in BANK0
  1042                           ;!
  1043                           ;!    _main->_sprintf
  1044                           ;!    _sprintf->___llmod
  1045                           ;!
  1046                           ;!Critical Paths under _main in BANK1
  1047                           ;!
  1048                           ;!    None.
  1049                           ;!
  1050                           ;!Critical Paths under _main in BANK3
  1051                           ;!
  1052                           ;!    None.
  1053                           ;!
  1054                           ;!Critical Paths under _main in BANK2
  1055                           ;!
  1056                           ;!    None.
  1057                           
  1058 ;;
  1059 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1060 ;;
  1061                           
  1062                           ;!
  1063                           ;!Call Graph Tables:
  1064                           ;!
  1065                           ;! ---------------------------------------------------------------------------------
  1066                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1067                           ;! ---------------------------------------------------------------------------------
  1068                           ;! (0) _main                                                38    38      0    7206
  1069                           ;!                                             32 BANK0     38    38      0
  1070                           ;!                              _GotoX
  1071                           ;!                          _LCD_Clear
  1072                           ;!                           _LCD_Init
  1073                           ;!                      _LCD_String_xy
  1074                           ;!                            _sprintf
  1075                           ;! ---------------------------------------------------------------------------------
  1076                           ;! (1) _sprintf                                             30    25      5    1708
  1077                           ;!                                             10 BANK0     22    17      5
  1078                           ;!                            ___lldiv
  1079                           ;!                            ___llmod
  1080                           ;!                             ___wmul
  1081                           ;!                            _isdigit
  1082                           ;! ---------------------------------------------------------------------------------
  1083                           ;! (2) _isdigit                                              2     2      0      68
  1084                           ;!                                              0 COMMON     2     2      0
  1085                           ;! ---------------------------------------------------------------------------------
  1086                           ;! (2) ___wmul                                               6     2      4     244
  1087                           ;!                                              0 COMMON     6     2      4
  1088                           ;! ---------------------------------------------------------------------------------
  1089                           ;! (2) ___llmod                                             10     2      8     311
  1090                           ;!                                              0 BANK0     10     2      8
  1091                           ;!                            ___lldiv (ARG)
  1092                           ;! ---------------------------------------------------------------------------------
  1093                           ;! (2) ___lldiv                                             14     6      8     314
  1094                           ;!                                              0 COMMON    14     6      8
  1095                           ;! ---------------------------------------------------------------------------------
  1096                           ;! (1) _LCD_Init                                             3     3      0      44
  1097                           ;!                                              3 COMMON     3     3      0
  1098                           ;!                        _LCD_Command
  1099                           ;! ---------------------------------------------------------------------------------
  1100                           ;! (1) _LCD_Clear                                            2     2      0      44
  1101                           ;!                                              3 COMMON     2     2      0
  1102                           ;!                        _LCD_Command
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (1) _GotoX                                               31    26      5    3391
  1105                           ;!                                              0 BANK0     31    26      5
  1106                           ;!                      _LCD_String_xy
  1107                           ;!                            ___awdiv
  1108                           ;!                           _delay_us
  1109                           ;! ---------------------------------------------------------------------------------
  1110                           ;! (2) _delay_us                                             2     0      2     327
  1111                           ;!                                              0 COMMON     2     0      2
  1112                           ;! ---------------------------------------------------------------------------------
  1113                           ;! (2) ___awdiv                                              9     5      4     908
  1114                           ;!                                              0 COMMON     9     5      4
  1115                           ;! ---------------------------------------------------------------------------------
  1116                           ;! (1) _LCD_String_xy                                        6     3      3    1913
  1117                           ;!                                              5 COMMON     6     3      3
  1118                           ;!                        _LCD_Command
  1119                           ;!                         _LCD_String
  1120                           ;! ---------------------------------------------------------------------------------
  1121                           ;! (2) _LCD_String                                           2     0      2     165
  1122                           ;!                                              3 COMMON     2     0      2
  1123                           ;!                           _LCD_Char
  1124                           ;! ---------------------------------------------------------------------------------
  1125                           ;! (3) _LCD_Char                                             3     3      0      44
  1126                           ;!                                              0 COMMON     3     3      0
  1127                           ;! ---------------------------------------------------------------------------------
  1128                           ;! (2) _LCD_Command                                          3     3      0      44
  1129                           ;!                                              0 COMMON     3     3      0
  1130                           ;! ---------------------------------------------------------------------------------
  1131                           ;! Estimated maximum stack depth 3
  1132                           ;! ---------------------------------------------------------------------------------
  1133                           ;!
  1134                           ;! Call Graph Graphs:
  1135                           ;!
  1136                           ;! _main (ROOT)
  1137                           ;!   _GotoX
  1138                           ;!     _LCD_String_xy
  1139                           ;!       _LCD_Command
  1140                           ;!       _LCD_String
  1141                           ;!         _LCD_Char
  1142                           ;!     ___awdiv
  1143                           ;!     _delay_us
  1144                           ;!   _LCD_Clear
  1145                           ;!     _LCD_Command
  1146                           ;!   _LCD_Init
  1147                           ;!     _LCD_Command
  1148                           ;!   _LCD_String_xy
  1149                           ;!     _LCD_Command
  1150                           ;!     _LCD_String
  1151                           ;!       _LCD_Char
  1152                           ;!   _sprintf
  1153                           ;!     ___lldiv
  1154                           ;!     ___llmod
  1155                           ;!       ___lldiv (ARG)
  1156                           ;!     ___wmul
  1157                           ;!     _isdigit
  1158                           ;!
  1159                           
  1160                           ;! Address spaces:
  1161                           
  1162                           ;!Name               Size   Autos  Total    Cost      Usage
  1163                           ;!BITCOMMON            E      0       0       0        0.0%
  1164                           ;!EEDATA             100      0       0       0        0.0%
  1165                           ;!NULL                 0      0       0       0        0.0%
  1166                           ;!CODE                 0      0       0       0        0.0%
  1167                           ;!COMMON               E      E       E       1      100.0%
  1168                           ;!BITSFR0              0      0       0       1        0.0%
  1169                           ;!SFR0                 0      0       0       1        0.0%
  1170                           ;!BITSFR1              0      0       0       2        0.0%
  1171                           ;!SFR1                 0      0       0       2        0.0%
  1172                           ;!STACK                0      0       0       2        0.0%
  1173                           ;!ABS                  0      0      86       3        0.0%
  1174                           ;!BITBANK0            50      0       0       4        0.0%
  1175                           ;!BITSFR3              0      0       0       4        0.0%
  1176                           ;!SFR3                 0      0       0       4        0.0%
  1177                           ;!BANK0               50     46      46       5       87.5%
  1178                           ;!BITSFR2              0      0       0       5        0.0%
  1179                           ;!SFR2                 0      0       0       5        0.0%
  1180                           ;!BITBANK1            50      0       0       6        0.0%
  1181                           ;!BANK1               50      0      32       7       62.5%
  1182                           ;!BITBANK3            60      0       0       8        0.0%
  1183                           ;!BANK3               60      0       0       9        0.0%
  1184                           ;!BITBANK2            60      0       0      10        0.0%
  1185                           ;!BANK2               60      0       0      11        0.0%
  1186                           ;!DATA                 0      0      86      12        0.0%
  1187                           
  1188                           	global	_main
  1189                           
  1190 ;; *************** function _main *****************
  1191 ;; Defined at:
  1192 ;;		line 221 in file "cnc.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  to             18   52[BANK0 ] struct .
  1197 ;;  str            16   36[BANK0 ] unsigned char [16]
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : B00/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0      34       0       0       0
  1209 ;;      Temps:          0       4       0       0       0
  1210 ;;      Totals:         0      38       0       0       0
  1211 ;;Total ram usage:       38 bytes
  1212 ;; Hardware stack levels required when called:    4
  1213 ;; This function calls:
  1214 ;;		_GotoX
  1215 ;;		_LCD_Clear
  1216 ;;		_LCD_Init
  1217 ;;		_LCD_String_xy
  1218 ;;		_sprintf
  1219 ;; This function is called by:
  1220 ;;		Startup code after reset
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1224                           	file	"cnc.c"
  1225                           	line	221
  1226                           global __pmaintext
  1227                           __pmaintext:	;psect for function _main
  1228  04DB                     psect	maintext
  1229                           	file	"cnc.c"
  1230                           	line	221
  1231                           	global	__size_of_main
  1232                           	__size_of_main	equ	__end_of_main-_main
  1233  013B                     	
  1234                           _main:	
  1235  04DB                     ;incstack = 0
  1236                           	opt	stack 4
  1237                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1238                           	line	222
  1239                           	
  1240                           l1693:	
  1241  04DB                     ;cnc.c: 222:     char str[16] = {0};
  1242                           	movlw	(main@str)&0ffh
  1243  04DB  3044               	movwf	fsr0
  1244  04DC  0084               	movlw	low(main@F1538)
  1245  04DD  30B2               	bcf	status, 5	;RP0=0, select bank0
  1246  04DE  1283               	bcf	status, 6	;RP1=0, select bank0
  1247  04DF  1303               	movwf	(??_main+0)+0
  1248  04E0  00C0               	movf	fsr0,w
  1249  04E1  0804               	movwf	((??_main+0)+0+1)
  1250  04E2  00C1               	movlw	16
  1251  04E3  3010               	movwf	((??_main+0)+0+2)
  1252  04E4  00C2               u1490:
  1253  04E5                     	movf	(??_main+0)+0,w
  1254  04E5  0840               	movwf	fsr0
  1255  04E6  0084               	bcf	status, 7	;select IRP bank1
  1256  04E7  1383               	
  1257                           	movf	indf,w
  1258  04E8  0800               	movwf	((??_main+0)+0+3)
  1259  04E9  00C3               	incf	(??_main+0)+0,f
  1260  04EA  0AC0               	movf	((??_main+0)+0+1),w
  1261  04EB  0841               	movwf	fsr0
  1262  04EC  0084               	
  1263                           	movf	((??_main+0)+0+3),w
  1264  04ED  0843               	movwf	indf
  1265  04EE  0080               	incf	((??_main+0)+0+1),f
  1266  04EF  0AC1               	decfsz	((??_main+0)+0+2),f
  1267  04F0  0BC2               	goto	u1490
  1268  04F1  2CE5               	
  1269                           	line	223
  1270                           	
  1271                           l1695:	
  1272  04F2                     ;cnc.c: 223:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1273                           	opt asmopt_push
  1274                           opt asmopt_off
  1275                           movlw  13
  1276  04F2  300D               	bcf	status, 5	;RP0=0, select bank0
  1277  04F3  1283               	bcf	status, 6	;RP1=0, select bank0
  1278  04F4  1303               movwf	((??_main+0)+0+2),f
  1279  04F5  00C2               movlw	175
  1280  04F6  30AF               movwf	((??_main+0)+0+1),f
  1281  04F7  00C1               	movlw	181
  1282  04F8  30B5               movwf	((??_main+0)+0),f
  1283  04F9  00C0               	u1557:
  1284  04FA                     decfsz	((??_main+0)+0),f
  1285  04FA  0BC0               	goto	u1557
  1286  04FB  2CFA               	decfsz	((??_main+0)+0+1),f
  1287  04FC  0BC1               	goto	u1557
  1288  04FD  2CFA               	decfsz	((??_main+0)+0+2),f
  1289  04FE  0BC2               	goto	u1557
  1290  04FF  2CFA               	nop2
  1291  0500  2D01               opt asmopt_pop
  1292                           
  1293                           	line	225
  1294                           	
  1295                           l1697:	
  1296  0501                     ;cnc.c: 225:     ANSEL = 0;
  1297                           	bsf	status, 5	;RP0=1, select bank3
  1298  0501  1683               	bsf	status, 6	;RP1=1, select bank3
  1299  0502  1703               	clrf	(392)^0180h	;volatile
  1300  0503  0188               	line	226
  1301                           	
  1302                           l1699:	
  1303  0504                     ;cnc.c: 226:     PORTA = 0;
  1304                           	bcf	status, 5	;RP0=0, select bank0
  1305  0504  1283               	bcf	status, 6	;RP1=0, select bank0
  1306  0505  1303               	clrf	(5)	;volatile
  1307  0506  0185               	line	227
  1308                           	
  1309                           l1701:	
  1310  0507                     ;cnc.c: 227:     TRISA = 0xFF;
  1311                           	movlw	low(0FFh)
  1312  0507  30FF               	bsf	status, 5	;RP0=1, select bank1
  1313  0508  1683               	bcf	status, 6	;RP1=0, select bank1
  1314  0509  1303               	movwf	(133)^080h	;volatile
  1315  050A  0085               	line	229
  1316                           	
  1317                           l1703:	
  1318  050B                     ;cnc.c: 229:     ANSELH = 0;
  1319                           	bsf	status, 5	;RP0=1, select bank3
  1320  050B  1683               	bsf	status, 6	;RP1=1, select bank3
  1321  050C  1703               	clrf	(393)^0180h	;volatile
  1322  050D  0189               	line	230
  1323                           	
  1324                           l1705:	
  1325  050E                     ;cnc.c: 230:     IOCB = 0;
  1326                           	bsf	status, 5	;RP0=1, select bank1
  1327  050E  1683               	bcf	status, 6	;RP1=0, select bank1
  1328  050F  1303               	clrf	(150)^080h	;volatile
  1329  0510  0196               	line	231
  1330                           	
  1331                           l1707:	
  1332  0511                     ;cnc.c: 231:     PORTD = 0;
  1333                           	bcf	status, 5	;RP0=0, select bank0
  1334  0511  1283               	bcf	status, 6	;RP1=0, select bank0
  1335  0512  1303               	clrf	(8)	;volatile
  1336  0513  0188               	line	232
  1337                           	
  1338                           l1709:	
  1339  0514                     ;cnc.c: 232:     TRISD = 0;
  1340                           	bsf	status, 5	;RP0=1, select bank1
  1341  0514  1683               	bcf	status, 6	;RP1=0, select bank1
  1342  0515  1303               	clrf	(136)^080h	;volatile
  1343  0516  0188               	line	234
  1344                           	
  1345                           l1711:	
  1346  0517                     ;cnc.c: 234:     PORTB = 0;
  1347                           	bcf	status, 5	;RP0=0, select bank0
  1348  0517  1283               	bcf	status, 6	;RP1=0, select bank0
  1349  0518  1303               	clrf	(6)	;volatile
  1350  0519  0186               	line	235
  1351                           	
  1352                           l1713:	
  1353  051A                     ;cnc.c: 235:     TRISB = 1;
  1354                           	movlw	low(01h)
  1355  051A  3001               	bsf	status, 5	;RP0=1, select bank1
  1356  051B  1683               	bcf	status, 6	;RP1=0, select bank1
  1357  051C  1303               	movwf	(134)^080h	;volatile
  1358  051D  0086               	line	237
  1359                           	
  1360                           l1715:	
  1361  051E                     ;cnc.c: 237:     LCD_Init();
  1362                           	fcall	_LCD_Init
  1363  051E  120A  118A  218F  120A  118A  	line	238
  1364                           	
  1365                           l1717:	
  1366  0523                     ;cnc.c: 238:     LCD_Clear();
  1367                           	fcall	_LCD_Clear
  1368  0523  120A  118A  2108  120A  118A  	line	240
  1369                           	
  1370                           l1719:	
  1371  0528                     ;cnc.c: 240:     LCD_String_xy(1,0,"HELLO");
  1372                           	clrf	(LCD_String_xy@pos)
  1373  0528  01F5               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1374  0529  3055               	movwf	(LCD_String_xy@msg)
  1375  052A  00F6               	movlw	80h
  1376  052B  3080               	movwf	(LCD_String_xy@msg+1)
  1377  052C  00F7               	movlw	low(01h)
  1378  052D  3001               	fcall	_LCD_String_xy
  1379  052E  120A  118A  2286  120A  118A  	line	241
  1380                           	
  1381                           l1721:	
  1382  0533                     ;cnc.c: 241:     LCD_String_xy(2,0,"POS X: ");
  1383                           	clrf	(LCD_String_xy@pos)
  1384  0533  01F5               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1385  0534  303D               	movwf	(LCD_String_xy@msg)
  1386  0535  00F6               	movlw	80h
  1387  0536  3080               	movwf	(LCD_String_xy@msg+1)
  1388  0537  00F7               	movlw	low(02h)
  1389  0538  3002               	fcall	_LCD_String_xy
  1390  0539  120A  118A  2286  120A  118A  	line	242
  1391                           	
  1392                           l1723:	
  1393  053E                     ;cnc.c: 242:     LCD_String_xy(3,0,"POS Y: ");
  1394                           	clrf	(LCD_String_xy@pos)
  1395  053E  01F5               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  1396  053F  3045               	movwf	(LCD_String_xy@msg)
  1397  0540  00F6               	movlw	80h
  1398  0541  3080               	movwf	(LCD_String_xy@msg+1)
  1399  0542  00F7               	movlw	low(03h)
  1400  0543  3003               	fcall	_LCD_String_xy
  1401  0544  120A  118A  2286  120A  118A  	line	243
  1402                           	
  1403                           l1725:	
  1404  0549                     ;cnc.c: 243:     LCD_String_xy(4,0,"POS Z: ");
  1405                           	clrf	(LCD_String_xy@pos)
  1406  0549  01F5               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  1407  054A  304D               	movwf	(LCD_String_xy@msg)
  1408  054B  00F6               	movlw	80h
  1409  054C  3080               	movwf	(LCD_String_xy@msg+1)
  1410  054D  00F7               	movlw	low(04h)
  1411  054E  3004               	fcall	_LCD_String_xy
  1412  054F  120A  118A  2286  120A  118A  	line	245
  1413                           	
  1414                           l1727:	
  1415  0554                     ;cnc.c: 245:     sprintf(str,"%8lu",current_position.x);
  1416                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  1417  0554  305B               	bcf	status, 5	;RP0=0, select bank0
  1418  0555  1283               	bcf	status, 6	;RP1=0, select bank0
  1419  0556  1303               	movwf	(??_main+0)+0
  1420  0557  00C0               	movf	(??_main+0)+0,w
  1421  0558  0840               	movwf	(sprintf@f)
  1422  0559  00AA               	bsf	status, 5	;RP0=1, select bank1
  1423  055A  1683               	bcf	status, 6	;RP1=0, select bank1
  1424  055B  1303               	movf	(_current_position+3)^080h,w
  1425  055C  0823               	bcf	status, 5	;RP0=0, select bank0
  1426  055D  1283               	bcf	status, 6	;RP1=0, select bank0
  1427  055E  1303               	movwf	3+(?_sprintf)+01h
  1428  055F  00AE               	bsf	status, 5	;RP0=1, select bank1
  1429  0560  1683               	bcf	status, 6	;RP1=0, select bank1
  1430  0561  1303               	movf	(_current_position+2)^080h,w
  1431  0562  0822               	bcf	status, 5	;RP0=0, select bank0
  1432  0563  1283               	bcf	status, 6	;RP1=0, select bank0
  1433  0564  1303               	movwf	2+(?_sprintf)+01h
  1434  0565  00AD               	bsf	status, 5	;RP0=1, select bank1
  1435  0566  1683               	bcf	status, 6	;RP1=0, select bank1
  1436  0567  1303               	movf	(_current_position+1)^080h,w
  1437  0568  0821               	bcf	status, 5	;RP0=0, select bank0
  1438  0569  1283               	bcf	status, 6	;RP1=0, select bank0
  1439  056A  1303               	movwf	1+(?_sprintf)+01h
  1440  056B  00AC               	bsf	status, 5	;RP0=1, select bank1
  1441  056C  1683               	bcf	status, 6	;RP1=0, select bank1
  1442  056D  1303               	movf	(_current_position)^080h,w
  1443  056E  0820               	bcf	status, 5	;RP0=0, select bank0
  1444  056F  1283               	bcf	status, 6	;RP1=0, select bank0
  1445  0570  1303               	movwf	0+(?_sprintf)+01h
  1446  0571  00AB               
  1447                           	movlw	(low(main@str|((0x0)<<8)))&0ffh
  1448  0572  3044               	fcall	_sprintf
  1449  0573  120A  118A  2616  120A  118A  	line	246
  1450                           	
  1451                           l1729:	
  1452  0578                     ;cnc.c: 246:     LCD_String_xy(2,7,str);
  1453                           	movlw	low(07h)
  1454  0578  3007               	bcf	status, 5	;RP0=0, select bank0
  1455  0579  1283               	bcf	status, 6	;RP1=0, select bank0
  1456  057A  1303               	movwf	(??_main+0)+0
  1457  057B  00C0               	movf	(??_main+0)+0,w
  1458  057C  0840               	movwf	(LCD_String_xy@pos)
  1459  057D  00F5               	movlw	(low(main@str|((0x0)<<8))&0ffh)
  1460  057E  3044               	movwf	(LCD_String_xy@msg)
  1461  057F  00F6               	movlw	(0x0)
  1462  0580  3000               	movwf	(LCD_String_xy@msg+1)
  1463  0581  00F7               	movlw	low(02h)
  1464  0582  3002               	fcall	_LCD_String_xy
  1465  0583  120A  118A  2286  120A  118A  	line	247
  1466                           	
  1467                           l1731:	
  1468  0588                     ;cnc.c: 247:     str[0] = 0;
  1469                           	bcf	status, 5	;RP0=0, select bank0
  1470  0588  1283               	bcf	status, 6	;RP1=0, select bank0
  1471  0589  1303               	clrf	(main@str)
  1472  058A  01C4               	line	249
  1473                           	
  1474                           l1733:	
  1475  058B                     ;cnc.c: 249:     if (!PORTAbits.RA1) current_position.xlimit_min = 1;
  1476                           	btfsc	(5),1	;volatile
  1477  058B  1885               	goto	u1501
  1478  058C  2D8E               	goto	u1500
  1479  058D  2D8F               u1501:
  1480  058E                     	goto	l102
  1481  058E  2D93               u1500:
  1482  058F                     	
  1483                           l1735:	
  1484  058F                     	bsf	status, 5	;RP0=1, select bank1
  1485  058F  1683               	bcf	status, 6	;RP1=0, select bank1
  1486  0590  1303               	clrf	0+(_current_position)^080h+0Dh
  1487  0591  01AD               	incf	0+(_current_position)^080h+0Dh,f
  1488  0592  0AAD               	
  1489                           l102:	
  1490  0593                     	line	250
  1491                           ;cnc.c: 250:     if (!PORTAbits.RA0) current_position.xlimit_max = 1;
  1492                           	bcf	status, 5	;RP0=0, select bank0
  1493  0593  1283               	btfsc	(5),0	;volatile
  1494  0594  1805               	goto	u1511
  1495  0595  2D97               	goto	u1510
  1496  0596  2D98               u1511:
  1497  0597                     	goto	l1739
  1498  0597  2D9D               u1510:
  1499  0598                     	
  1500                           l1737:	
  1501  0598                     	bsf	status, 5	;RP0=1, select bank1
  1502  0598  1683               	bcf	status, 6	;RP1=0, select bank1
  1503  0599  1303               	clrf	0+(_current_position)^080h+0Ch
  1504  059A  01AC               	incf	0+(_current_position)^080h+0Ch,f
  1505  059B  0AAC               	goto	l1739
  1506  059C  2D9D               	
  1507                           l103:	
  1508  059D                     	line	253
  1509                           	
  1510                           l1739:	
  1511  059D                     ;cnc.c: 252:     coordinates_t to;;cnc.c: 253:     to.x = 10;
  1512                           	movlw	0
  1513  059D  3000               	bcf	status, 5	;RP0=0, select bank0
  1514  059E  1283               	movwf	(main@to+3)
  1515  059F  00D7               	movlw	0
  1516  05A0  3000               	movwf	(main@to+2)
  1517  05A1  00D6               	movlw	0
  1518  05A2  3000               	movwf	(main@to+1)
  1519  05A3  00D5               	movlw	0Ah
  1520  05A4  300A               	movwf	(main@to)
  1521  05A5  00D4               
  1522                           	line	254
  1523                           ;cnc.c: 254:     to.y = 10;
  1524                           	movlw	0
  1525  05A6  3000               	movwf	3+(main@to)+04h
  1526  05A7  00DB               	movlw	0
  1527  05A8  3000               	movwf	2+(main@to)+04h
  1528  05A9  00DA               	movlw	0
  1529  05AA  3000               	movwf	1+(main@to)+04h
  1530  05AB  00D9               	movlw	0Ah
  1531  05AC  300A               	movwf	0+(main@to)+04h
  1532  05AD  00D8               
  1533                           	line	255
  1534                           ;cnc.c: 255:     to.z = 10;
  1535                           	movlw	0
  1536  05AE  3000               	movwf	3+(main@to)+08h
  1537  05AF  00DF               	movlw	0
  1538  05B0  3000               	movwf	2+(main@to)+08h
  1539  05B1  00DE               	movlw	0
  1540  05B2  3000               	movwf	1+(main@to)+08h
  1541  05B3  00DD               	movlw	0Ah
  1542  05B4  300A               	movwf	0+(main@to)+08h
  1543  05B5  00DC               
  1544                           	goto	l1741
  1545  05B6  2DB7               	line	258
  1546                           ;cnc.c: 258:     while(1){
  1547                           	
  1548                           l104:	
  1549  05B7                     	line	259
  1550                           	
  1551                           l1741:	
  1552  05B7                     ;cnc.c: 259:         if(!PORTBbits.RB0){
  1553                           	btfsc	(6),0	;volatile
  1554  05B7  1806               	goto	u1521
  1555  05B8  2DBA               	goto	u1520
  1556  05B9  2DBB               u1521:
  1557  05BA                     	goto	l1745
  1558  05BA  2DCD               u1520:
  1559  05BB                     	line	261
  1560                           	
  1561                           l1743:	
  1562  05BB                     ;cnc.c: 261:             GotoX(10000,100);
  1563                           	movlw	0
  1564  05BB  3000               	movwf	(GotoX@point+3)
  1565  05BC  00A3               	movlw	0
  1566  05BD  3000               	movwf	(GotoX@point+2)
  1567  05BE  00A2               	movlw	027h
  1568  05BF  3027               	movwf	(GotoX@point+1)
  1569  05C0  00A1               	movlw	010h
  1570  05C1  3010               	movwf	(GotoX@point)
  1571  05C2  00A0               
  1572                           	movlw	low(064h)
  1573  05C3  3064               	movwf	(??_main+0)+0
  1574  05C4  00C0               	movf	(??_main+0)+0,w
  1575  05C5  0840               	movwf	(GotoX@speed)
  1576  05C6  00A4               	fcall	_GotoX
  1577  05C7  120A  118A  23CB  120A  118A  	goto	l1745
  1578  05CC  2DCD               	line	262
  1579                           ;cnc.c: 262:         }
  1580                           	
  1581                           l105:	
  1582  05CD                     	line	267
  1583                           	
  1584                           l1745:	
  1585  05CD                     ;cnc.c: 267:         if(current_position.xlimit_max || current_position.xlimit_min) LCD_
                                 String_xy(2,15,"*");
  1586                           	bsf	status, 5	;RP0=1, select bank1
  1587  05CD  1683               	bcf	status, 6	;RP1=0, select bank1
  1588  05CE  1303               	movf	(0+(_current_position)^080h+0Ch),w
  1589  05CF  082C               	btfss	status,2
  1590  05D0  1D03               	goto	u1531
  1591  05D1  2DD3               	goto	u1530
  1592  05D2  2DD4               u1531:
  1593  05D3                     	goto	l1749
  1594  05D3  2DDA               u1530:
  1595  05D4                     	
  1596                           l1747:	
  1597  05D4                     	movf	(0+(_current_position)^080h+0Dh),w
  1598  05D4  082D               	btfsc	status,2
  1599  05D5  1903               	goto	u1541
  1600  05D6  2DD8               	goto	u1540
  1601  05D7  2DD9               u1541:
  1602  05D8                     	goto	l1751
  1603  05D8  2DEB               u1540:
  1604  05D9                     	goto	l1749
  1605  05D9  2DDA               	
  1606                           l108:	
  1607  05DA                     	
  1608                           l1749:	
  1609  05DA                     	movlw	low(0Fh)
  1610  05DA  300F               	bcf	status, 5	;RP0=0, select bank0
  1611  05DB  1283               	bcf	status, 6	;RP1=0, select bank0
  1612  05DC  1303               	movwf	(??_main+0)+0
  1613  05DD  00C0               	movf	(??_main+0)+0,w
  1614  05DE  0840               	movwf	(LCD_String_xy@pos)
  1615  05DF  00F5               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  1616  05E0  3060               	movwf	(LCD_String_xy@msg)
  1617  05E1  00F6               	movlw	80h
  1618  05E2  3080               	movwf	(LCD_String_xy@msg+1)
  1619  05E3  00F7               	movlw	low(02h)
  1620  05E4  3002               	fcall	_LCD_String_xy
  1621  05E5  120A  118A  2286  120A  118A  	goto	l1753
  1622  05EA  2DFC               	line	268
  1623                           ;cnc.c: 268:         else LCD_String_xy(2,15," ");
  1624                           	
  1625                           l106:	
  1626  05EB                     	
  1627                           l1751:	
  1628  05EB                     	movlw	low(0Fh)
  1629  05EB  300F               	bcf	status, 5	;RP0=0, select bank0
  1630  05EC  1283               	bcf	status, 6	;RP1=0, select bank0
  1631  05ED  1303               	movwf	(??_main+0)+0
  1632  05EE  00C0               	movf	(??_main+0)+0,w
  1633  05EF  0840               	movwf	(LCD_String_xy@pos)
  1634  05F0  00F5               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  1635  05F1  3043               	movwf	(LCD_String_xy@msg)
  1636  05F2  00F6               	movlw	80h
  1637  05F3  3080               	movwf	(LCD_String_xy@msg+1)
  1638  05F4  00F7               	movlw	low(02h)
  1639  05F5  3002               	fcall	_LCD_String_xy
  1640  05F6  120A  118A  2286  120A  118A  	goto	l1753
  1641  05FB  2DFC               	
  1642                           l109:	
  1643  05FC                     	line	269
  1644                           	
  1645                           l1753:	
  1646  05FC                     ;cnc.c: 269:     str[0] = 0;
  1647                           	bcf	status, 5	;RP0=0, select bank0
  1648  05FC  1283               	bcf	status, 6	;RP1=0, select bank0
  1649  05FD  1303               	clrf	(main@str)
  1650  05FE  01C4               	goto	l1741
  1651  05FF  2DB7               	line	270
  1652                           ;cnc.c: 270:     }
  1653                           	
  1654                           l110:	
  1655  0600                     	goto	l1741
  1656  0600  2DB7               	
  1657                           l111:	
  1658  0601                     	goto	l1755
  1659  0601  2E02               	line	271
  1660                           ;cnc.c: 271:     while(1){
  1661                           	
  1662                           l112:	
  1663  0602                     	line	272
  1664                           	
  1665                           l1755:	
  1666  0602                     ;cnc.c: 272:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1667                           	opt asmopt_push
  1668                           opt asmopt_off
  1669                           movlw  26
  1670  0602  301A               	bcf	status, 5	;RP0=0, select bank0
  1671  0603  1283               	bcf	status, 6	;RP1=0, select bank0
  1672  0604  1303               movwf	((??_main+0)+0+2),f
  1673  0605  00C2               movlw	94
  1674  0606  305E               movwf	((??_main+0)+0+1),f
  1675  0607  00C1               	movlw	109
  1676  0608  306D               movwf	((??_main+0)+0),f
  1677  0609  00C0               	u1567:
  1678  060A                     decfsz	((??_main+0)+0),f
  1679  060A  0BC0               	goto	u1567
  1680  060B  2E0A               	decfsz	((??_main+0)+0+1),f
  1681  060C  0BC1               	goto	u1567
  1682  060D  2E0A               	decfsz	((??_main+0)+0+2),f
  1683  060E  0BC2               	goto	u1567
  1684  060F  2E0A               	nop2
  1685  0610  2E11               opt asmopt_pop
  1686                           
  1687                           	goto	l1755
  1688  0611  2E02               	line	273
  1689                           ;cnc.c: 273:     }
  1690                           	
  1691                           l113:	
  1692  0612                     	goto	l1755
  1693  0612  2E02               	
  1694                           l114:	
  1695  0613                     	line	277
  1696                           ;cnc.c: 276:     return;
  1697                           	
  1698                           l115:	
  1699  0613                     	global	start
  1700                           	ljmp	start
  1701  0613  120A  118A  2800   	opt stack 0
  1702                           GLOBAL	__end_of_main
  1703                           	__end_of_main:
  1704  0616                     	signat	_main,89
  1705                           	global	_sprintf
  1706                           
  1707 ;; *************** function _sprintf *****************
  1708 ;; Defined at:
  1709 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  sp              1    wreg     PTR unsigned char 
  1712 ;;		 -> main@str(16), 
  1713 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1714 ;;		 -> STR_7(5), 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  1717 ;;		 -> main@str(16), 
  1718 ;;  val             4   23[BANK0 ] unsigned long 
  1719 ;;  tmpval          4    0        struct .
  1720 ;;  width           2   29[BANK0 ] int 
  1721 ;;  prec            2   21[BANK0 ] int 
  1722 ;;  cp              2    0        PTR const unsigned char 
  1723 ;;  len             2    0        unsigned int 
  1724 ;;  c               1   31[BANK0 ] unsigned char 
  1725 ;;  ap              1   27[BANK0 ] PTR void [1]
  1726 ;;		 -> ?_sprintf(2), 
  1727 ;;  flag            1   20[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2   10[BANK0 ] int 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       5       0       0       0
  1738 ;;      Locals:         0      12       0       0       0
  1739 ;;      Temps:          0       5       0       0       0
  1740 ;;      Totals:         0      22       0       0       0
  1741 ;;Total ram usage:       22 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		___lldiv
  1746 ;;		___llmod
  1747 ;;		___wmul
  1748 ;;		_isdigit
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1754                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1755                           	line	500
  1756                           global __ptext1
  1757                           __ptext1:	;psect for function _sprintf
  1758  0616                     psect	text1
  1759                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1760                           	line	500
  1761                           	global	__size_of_sprintf
  1762                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  1763  01DD                     	
  1764                           _sprintf:	
  1765  0616                     ;incstack = 0
  1766                           	opt	stack 6
  1767                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1768                           ;sprintf@sp stored from wreg
  1769                           	bcf	status, 5	;RP0=0, select bank0
  1770  0616  1283               	bcf	status, 6	;RP1=0, select bank0
  1771  0617  1303               	movwf	(sprintf@sp)
  1772  0618  00BC               	line	545
  1773                           	
  1774                           l1539:	
  1775  0619                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic
                                 \sources\c90\common\doprnt.c: 512:  int prec;
  1776                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  1777  0619  302B               	movwf	(??_sprintf+0)+0
  1778  061A  00AF               	movf	(??_sprintf+0)+0,w
  1779  061B  082F               	movwf	(sprintf@ap)
  1780  061C  00BB               	line	548
  1781                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  1782                           	goto	l1611
  1783  061D  2FD7               	
  1784                           l250:	
  1785  061E                     	line	550
  1786                           	
  1787                           l1541:	
  1788  061E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  1789                           		movlw	37
  1790  061E  3025               	xorwf	((sprintf@c)),w
  1791  061F  063F               	btfsc	status,2
  1792  0620  1903               	goto	u1251
  1793  0621  2E23               	goto	u1250
  1794  0622  2E24               u1251:
  1795  0623                     	goto	l1547
  1796  0623  2E30               u1250:
  1797  0624                     	line	553
  1798                           	
  1799                           l1543:	
  1800  0624                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  1801                           	movf	(sprintf@c),w
  1802  0624  083F               	movwf	(??_sprintf+0)+0
  1803  0625  00AF               	movf	(sprintf@sp),w
  1804  0626  083C               	movwf	fsr0
  1805  0627  0084               	movf	(??_sprintf+0)+0,w
  1806  0628  082F               	bcf	status, 7	;select IRP bank0
  1807  0629  1383               	movwf	indf
  1808  062A  0080               	
  1809                           l1545:	
  1810  062B                     	movlw	low(01h)
  1811  062B  3001               	movwf	(??_sprintf+0)+0
  1812  062C  00AF               	movf	(??_sprintf+0)+0,w
  1813  062D  082F               	addwf	(sprintf@sp),f
  1814  062E  07BC               	line	554
  1815                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  1816                           	goto	l1611
  1817  062F  2FD7               	line	555
  1818                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  1819                           	
  1820                           l251:	
  1821  0630                     	line	558
  1822                           	
  1823                           l1547:	
  1824  0630                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 558:   widt
                                 h = 0;
  1825                           	clrf	(sprintf@width)
  1826  0630  01BD               	clrf	(sprintf@width+1)
  1827  0631  01BE               	line	560
  1828                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  1829                           	clrf	(sprintf@flag)
  1830  0632  01B4               	line	609
  1831                           	
  1832                           l1549:	
  1833  0633                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 609:   if(i
                                 sdigit((unsigned)*f)) {
  1834                           	movf	(sprintf@f),w
  1835  0633  082A               	movwf	fsr0
  1836  0634  0084               	fcall	stringdir
  1837  0635  120A  118A  200D  120A  118A  	fcall	_isdigit
  1838  063A  120A  118A  212B  120A  118A  	btfss	status,0
  1839  063F  1C03               	goto	u1261
  1840  0640  2E42               	goto	u1260
  1841  0641  2E43               u1261:
  1842  0642                     	goto	l1565
  1843  0642  2E92               u1260:
  1844  0643                     	line	610
  1845                           	
  1846                           l1551:	
  1847  0643                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 610:    wid
                                 th = 0;
  1848                           	bcf	status, 5	;RP0=0, select bank0
  1849  0643  1283               	bcf	status, 6	;RP1=0, select bank0
  1850  0644  1303               	clrf	(sprintf@width)
  1851  0645  01BD               	clrf	(sprintf@width+1)
  1852  0646  01BE               	goto	l1553
  1853  0647  2E48               	line	611
  1854                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 611:    do 
                                 {
  1855                           	
  1856                           l253:	
  1857  0648                     	line	612
  1858                           	
  1859                           l1553:	
  1860  0648                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 612:     wi
                                 dth *= 10;
  1861                           	movlw	0Ah
  1862  0648  300A               	movwf	(___wmul@multiplier)
  1863  0649  00F0               	movlw	0
  1864  064A  3000               	movwf	((___wmul@multiplier))+1
  1865  064B  00F1               	bcf	status, 5	;RP0=0, select bank0
  1866  064C  1283               	bcf	status, 6	;RP1=0, select bank0
  1867  064D  1303               	movf	(sprintf@width+1),w
  1868  064E  083E               	movwf	(___wmul@multiplicand+1)
  1869  064F  00F3               	movf	(sprintf@width),w
  1870  0650  083D               	movwf	(___wmul@multiplicand)
  1871  0651  00F2               	fcall	___wmul
  1872  0652  120A  118A  2167  120A  118A  	movf	(1+(?___wmul)),w
  1873  0657  0871               	bcf	status, 5	;RP0=0, select bank0
  1874  0658  1283               	bcf	status, 6	;RP1=0, select bank0
  1875  0659  1303               	movwf	(sprintf@width+1)
  1876  065A  00BE               	movf	(0+(?___wmul)),w
  1877  065B  0870               	movwf	(sprintf@width)
  1878  065C  00BD               	line	613
  1879                           	
  1880                           l1555:	
  1881  065D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 613:       
                                  width += *f++ - '0';
  1882                           	movf	(sprintf@f),w
  1883  065D  082A               	movwf	fsr0
  1884  065E  0084               	fcall	stringdir
  1885  065F  120A  118A  200D  120A  118A  	addlw	low(-48)
  1886  0664  3ED0               	movwf	(??_sprintf+0)+0
  1887  0665  00AF               	movlw	high(-48)
  1888  0666  30FF               	skipnc
  1889  0667  1803               	movlw	(high(-48)+1)&0ffh
  1890  0668  3000               	movwf	((??_sprintf+0)+0)+1
  1891  0669  00B0               	movf	0+(??_sprintf+0)+0,w
  1892  066A  082F               	addwf	(sprintf@width),f
  1893  066B  07BD               	skipnc
  1894  066C  1803               	incf	(sprintf@width+1),f
  1895  066D  0ABE               	movf	1+(??_sprintf+0)+0,w
  1896  066E  0830               	addwf	(sprintf@width+1),f
  1897  066F  07BE               	
  1898                           l1557:	
  1899  0670                     	movlw	low(01h)
  1900  0670  3001               	movwf	(??_sprintf+0)+0
  1901  0671  00AF               	movf	(??_sprintf+0)+0,w
  1902  0672  082F               	addwf	(sprintf@f),f
  1903  0673  07AA               	line	614
  1904                           	
  1905                           l1559:	
  1906  0674                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 614:    } w
                                 hile(isdigit((unsigned)*f));
  1907                           	movf	(sprintf@f),w
  1908  0674  082A               	movwf	fsr0
  1909  0675  0084               	fcall	stringdir
  1910  0676  120A  118A  200D  120A  118A  	fcall	_isdigit
  1911  067B  120A  118A  212B  120A  118A  	btfsc	status,0
  1912  0680  1803               	goto	u1271
  1913  0681  2E83               	goto	u1270
  1914  0682  2E84               u1271:
  1915  0683                     	goto	l1553
  1916  0683  2E48               u1270:
  1917  0684                     	goto	l1565
  1918  0684  2E92               	
  1919                           l254:	
  1920  0685                     	goto	l1565
  1921  0685  2E92               	line	620
  1922                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 620:   }
  1923                           	
  1924                           l252:	
  1925  0686                     	goto	l1565
  1926  0686  2E92               	line	652
  1927                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 652: loop:

  1928                           	
  1929                           l255:	
  1930  0687                     	line	654
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  1932                           	goto	l1565
  1933  0687  2E92               	line	656
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  1935                           	
  1936                           l257:	
  1937  0688                     	line	657
  1938                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  1939                           	goto	l1613
  1940  0688  2FEB               	line	660
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 660:   case
                                  'l':
  1942                           	
  1943                           l259:	
  1944  0689                     	line	662
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 662:    fla
                                 g |= 0x10;
  1946                           	bsf	(sprintf@flag)+(4/8),(4)&7
  1947  0689  1634               	line	663
  1948                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 663:    got
                                 o loop;
  1949                           	goto	l1565
  1950  068A  2E92               	line	821
  1951                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  1952                           	
  1953                           l260:	
  1954  068B                     	line	832
  1955                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  1956                           	goto	l1611
  1957  068B  2FD7               	line	836
  1958                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 836:   case
                                  'u':
  1959                           	
  1960                           l261:	
  1961  068C                     	line	837
  1962                           	
  1963                           l1561:	
  1964  068C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 837:    fla
                                 g |= 0xC0;
  1965                           	movlw	low(0C0h)
  1966  068C  30C0               	movwf	(??_sprintf+0)+0
  1967  068D  00AF               	movf	(??_sprintf+0)+0,w
  1968  068E  082F               	iorwf	(sprintf@flag),f
  1969  068F  04B4               	line	838
  1970                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 838:    bre
                                 ak;
  1971                           	goto	l262
  1972  0690  2EB1               	line	841
  1973                           	
  1974                           l1563:	
  1975  0691                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  1976                           	goto	l262
  1977  0691  2EB1               	
  1978                           l256:	
  1979  0692                     	
  1980                           l1565:	
  1981  0692                     	movlw	01h
  1982  0692  3001               	bcf	status, 5	;RP0=0, select bank0
  1983  0693  1283               	bcf	status, 6	;RP1=0, select bank0
  1984  0694  1303               	addwf	(sprintf@f),f
  1985  0695  07AA               	movlw	-01h
  1986  0696  30FF               	addwf	(sprintf@f),w
  1987  0697  072A               	movwf	fsr0
  1988  0698  0084               	fcall	stringdir
  1989  0699  120A  118A  200D  120A  118A  	movwf	(sprintf@c)
  1990  069E  00BF               	movwf	(??_sprintf+0)+0
  1991  069F  00AF               	clrf	(??_sprintf+0)+0+1
  1992  06A0  01B0               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1993                           ; Switch size 1, requested type "space"
  1994                           ; Number of cases is 1, Range of values is 0 to 0
  1995                           ; switch strategies available:
  1996                           ; Name         Instructions Cycles
  1997                           ; simple_byte            4     3 (average)
  1998                           ; direct_byte           11     8 (fixed)
  1999                           ; jumptable            260     6 (fixed)
  2000                           ;	Chosen strategy is simple_byte
  2001                           
  2002                           	movf 1+(??_sprintf+0)+0,w
  2003  06A1  0830               	opt asmopt_push
  2004                           	opt asmopt_off
  2005                           	xorlw	0^0	; case 0
  2006  06A2  3A00               	skipnz
  2007  06A3  1903               	goto	l1777
  2008  06A4  2EA6               	goto	l1611
  2009  06A5  2FD7               	opt asmopt_pop
  2010                           	
  2011                           l1777:	
  2012  06A6                     ; Switch size 1, requested type "space"
  2013                           ; Number of cases is 3, Range of values is 0 to 117
  2014                           ; switch strategies available:
  2015                           ; Name         Instructions Cycles
  2016                           ; simple_byte           10     6 (average)
  2017                           ; jumptable            260     6 (fixed)
  2018                           ;	Chosen strategy is simple_byte
  2019                           
  2020                           	movf 0+(??_sprintf+0)+0,w
  2021  06A6  082F               	opt asmopt_push
  2022                           	opt asmopt_off
  2023                           	xorlw	0^0	; case 0
  2024  06A7  3A00               	skipnz
  2025  06A8  1903               	goto	l1613
  2026  06A9  2FEB               	xorlw	108^0	; case 108
  2027  06AA  3A6C               	skipnz
  2028  06AB  1903               	goto	l259
  2029  06AC  2E89               	xorlw	117^108	; case 117
  2030  06AD  3A19               	skipnz
  2031  06AE  1903               	goto	l1561
  2032  06AF  2E8C               	goto	l1611
  2033  06B0  2FD7               	opt asmopt_pop
  2034                           
  2035                           	
  2036                           l262:	
  2037  06B1                     	line	1300
  2038                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1292:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1300:     if(
                                 flag & 0x10)
  2039                           	btfss	(sprintf@flag),(4)&7
  2040  06B1  1E34               	goto	u1281
  2041  06B2  2EB4               	goto	u1280
  2042  06B3  2EB5               u1281:
  2043  06B4                     	goto	l1571
  2044  06B4  2EC8               u1280:
  2045  06B5                     	line	1301
  2046                           	
  2047                           l1567:	
  2048  06B5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1301:     v
                                 al = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  2049                           	movf	(sprintf@ap),w
  2050  06B5  083B               	movwf	fsr0
  2051  06B6  0084               	bcf	status, 7	;select IRP bank0
  2052  06B7  1383               	movf	indf,w
  2053  06B8  0800               	movwf	(sprintf@val)
  2054  06B9  00B7               	incf	fsr0,f
  2055  06BA  0A84               	movf	indf,w
  2056  06BB  0800               	movwf	(sprintf@val+1)
  2057  06BC  00B8               	incf	fsr0,f
  2058  06BD  0A84               	movf	indf,w
  2059  06BE  0800               	movwf	(sprintf@val+2)
  2060  06BF  00B9               	incf	fsr0,f
  2061  06C0  0A84               	movf	indf,w
  2062  06C1  0800               	movwf	(sprintf@val+3)
  2063  06C2  00BA               	
  2064                           l1569:	
  2065  06C3                     	movlw	low(04h)
  2066  06C3  3004               	movwf	(??_sprintf+0)+0
  2067  06C4  00AF               	movf	(??_sprintf+0)+0,w
  2068  06C5  082F               	addwf	(sprintf@ap),f
  2069  06C6  07BB               	goto	l1575
  2070  06C7  2EDB               	line	1302
  2071                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1302:    el
                                 se
  2072                           	
  2073                           l263:	
  2074  06C8                     	line	1305
  2075                           	
  2076                           l1571:	
  2077  06C8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1305:     v
                                 al = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2078                           	movf	(sprintf@ap),w
  2079  06C8  083B               	movwf	fsr0
  2080  06C9  0084               	bcf	status, 7	;select IRP bank0
  2081  06CA  1383               	movf	indf,w
  2082  06CB  0800               	movwf	(??_sprintf+0)+0+0
  2083  06CC  00AF               	incf	fsr0,f
  2084  06CD  0A84               	movf	indf,w
  2085  06CE  0800               	movwf	(??_sprintf+0)+0+1
  2086  06CF  00B0               	movf	0+(??_sprintf+0)+0,w
  2087  06D0  082F               	movwf	(sprintf@val)
  2088  06D1  00B7               	movf	1+(??_sprintf+0)+0,w
  2089  06D2  0830               	movwf	((sprintf@val))+1
  2090  06D3  00B8               	clrf	2+((sprintf@val))
  2091  06D4  01B9               	clrf	3+((sprintf@val))
  2092  06D5  01BA               	
  2093                           l1573:	
  2094  06D6                     	movlw	low(02h)
  2095  06D6  3002               	movwf	(??_sprintf+0)+0
  2096  06D7  00AF               	movf	(??_sprintf+0)+0,w
  2097  06D8  082F               	addwf	(sprintf@ap),f
  2098  06D9  07BB               	goto	l1575
  2099  06DA  2EDB               	
  2100                           l264:	
  2101  06DB                     	line	1324
  2102                           	
  2103                           l1575:	
  2104  06DB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1306:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2105                           	clrf	(sprintf@c)
  2106  06DB  01BF               	incf	(sprintf@c),f
  2107  06DC  0ABF               	
  2108                           l1577:	
  2109  06DD                     		movlw	10
  2110  06DD  300A               	xorwf	((sprintf@c)),w
  2111  06DE  063F               	btfss	status,2
  2112  06DF  1D03               	goto	u1291
  2113  06E0  2EE2               	goto	u1290
  2114  06E1  2EE3               u1291:
  2115  06E2                     	goto	l1581
  2116  06E2  2EE5               u1290:
  2117  06E3                     	goto	l1587
  2118  06E3  2F28               	
  2119                           l1579:	
  2120  06E4                     	goto	l1587
  2121  06E4  2F28               	
  2122                           l265:	
  2123  06E5                     	line	1325
  2124                           	
  2125                           l1581:	
  2126  06E5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2127                           	movf	(sprintf@c),w
  2128  06E5  083F               	movwf	(??_sprintf+0)+0
  2129  06E6  00AF               	movlw	(02h)-1
  2130  06E7  3001               u1305:
  2131  06E8                     	clrc
  2132  06E8  1003               	rlf	(??_sprintf+0)+0,f
  2133  06E9  0DAF               	addlw	-1
  2134  06EA  3EFF               	skipz
  2135  06EB  1D03               	goto	u1305
  2136  06EC  2EE8               	clrc
  2137  06ED  1003               	rlf	(??_sprintf+0)+0,w
  2138  06EE  0D2F               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2139  06EF  3E01               	movwf	fsr0
  2140  06F0  0084               	fcall	stringdir
  2141  06F1  120A  118A  200D  120A  118A  	movwf	((??_sprintf+1)+0)
  2142  06F6  00B0               	fcall	stringdir
  2143  06F7  120A  118A  200D  120A  118A  	movwf	((??_sprintf+1)+0+1)
  2144  06FC  00B1               	fcall	stringdir
  2145  06FD  120A  118A  200D  120A  118A  	movwf	((??_sprintf+1)+0+2)
  2146  0702  00B2               	fcall	stringdir
  2147  0703  120A  118A  200D  120A  118A  	movwf	((??_sprintf+1)+0+3)
  2148  0708  00B3               	movf	3+(??_sprintf+1)+0,w
  2149  0709  0833               	subwf	(sprintf@val+3),w
  2150  070A  023A               	skipz
  2151  070B  1D03               	goto	u1315
  2152  070C  2F17               	movf	2+(??_sprintf+1)+0,w
  2153  070D  0832               	subwf	(sprintf@val+2),w
  2154  070E  0239               	skipz
  2155  070F  1D03               	goto	u1315
  2156  0710  2F17               	movf	1+(??_sprintf+1)+0,w
  2157  0711  0831               	subwf	(sprintf@val+1),w
  2158  0712  0238               	skipz
  2159  0713  1D03               	goto	u1315
  2160  0714  2F17               	movf	0+(??_sprintf+1)+0,w
  2161  0715  0830               	subwf	(sprintf@val),w
  2162  0716  0237               u1315:
  2163  0717                     	skipnc
  2164  0717  1803               	goto	u1311
  2165  0718  2F1A               	goto	u1310
  2166  0719  2F1B               u1311:
  2167  071A                     	goto	l1585
  2168  071A  2F1D               u1310:
  2169  071B                     	goto	l1587
  2170  071B  2F28               	line	1326
  2171                           	
  2172                           l1583:	
  2173  071C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2174                           	goto	l1587
  2175  071C  2F28               	
  2176                           l267:	
  2177  071D                     	
  2178                           l1585:	
  2179  071D                     	movlw	low(01h)
  2180  071D  3001               	movwf	(??_sprintf+0)+0
  2181  071E  00AF               	movf	(??_sprintf+0)+0,w
  2182  071F  082F               	addwf	(sprintf@c),f
  2183  0720  07BF               		movlw	10
  2184  0721  300A               	xorwf	((sprintf@c)),w
  2185  0722  063F               	btfss	status,2
  2186  0723  1D03               	goto	u1321
  2187  0724  2F26               	goto	u1320
  2188  0725  2F27               u1321:
  2189  0726                     	goto	l1581
  2190  0726  2EE5               u1320:
  2191  0727                     	goto	l1587
  2192  0727  2F28               	
  2193                           l266:	
  2194  0728                     	line	1400
  2195                           	
  2196                           l1587:	
  2197  0728                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1400:   if(
                                 width > c)
  2198                           	movf	(sprintf@width+1),w
  2199  0728  083E               	xorlw	80h
  2200  0729  3A80               	sublw	080h
  2201  072A  3C80               	skipz
  2202  072B  1D03               	goto	u1335
  2203  072C  2F2F               	movf	(sprintf@width),w
  2204  072D  083D               	subwf	(sprintf@c),w
  2205  072E  023F               u1335:
  2206  072F                     
  2207                           	skipnc
  2208  072F  1803               	goto	u1331
  2209  0730  2F32               	goto	u1330
  2210  0731  2F33               u1331:
  2211  0732                     	goto	l1591
  2212  0732  2F3F               u1330:
  2213  0733                     	line	1401
  2214                           	
  2215                           l1589:	
  2216  0733                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1401:    wi
                                 dth -= c;
  2217                           	bcf	status, 5	;RP0=0, select bank0
  2218  0733  1283               	bcf	status, 6	;RP1=0, select bank0
  2219  0734  1303               	movf	(sprintf@c),w
  2220  0735  083F               	movwf	(??_sprintf+0)+0
  2221  0736  00AF               	clrf	(??_sprintf+0)+0+1
  2222  0737  01B0               	movf	0+(??_sprintf+0)+0,w
  2223  0738  082F               	subwf	(sprintf@width),f
  2224  0739  02BD               	movf	1+(??_sprintf+0)+0,w
  2225  073A  0830               	skipc
  2226  073B  1C03               	decf	(sprintf@width+1),f
  2227  073C  03BE               	subwf	(sprintf@width+1),f
  2228  073D  02BE               	goto	l1593
  2229  073E  2F44               	line	1402
  2230                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1402:   els
                                 e
  2231                           	
  2232                           l268:	
  2233  073F                     	line	1403
  2234                           	
  2235                           l1591:	
  2236  073F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1403:    wi
                                 dth = 0;
  2237                           	bcf	status, 5	;RP0=0, select bank0
  2238  073F  1283               	bcf	status, 6	;RP1=0, select bank0
  2239  0740  1303               	clrf	(sprintf@width)
  2240  0741  01BD               	clrf	(sprintf@width+1)
  2241  0742  01BE               	goto	l1593
  2242  0743  2F44               	
  2243                           l269:	
  2244  0744                     	line	1443
  2245                           	
  2246                           l1593:	
  2247  0744                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1443:    if(w
                                 idth
  2248                           	movf	((sprintf@width)),w
  2249  0744  083D               iorwf	((sprintf@width+1)),w
  2250  0745  043E               	btfsc	status,2
  2251  0746  1903               	goto	u1341
  2252  0747  2F49               	goto	u1340
  2253  0748  2F4A               u1341:
  2254  0749                     	goto	l1601
  2255  0749  2F64               u1340:
  2256  074A                     	goto	l1595
  2257  074A  2F4B               	line	1448
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1448:     d
                                 o
  2259                           	
  2260                           l271:	
  2261  074B                     	line	1449
  2262                           	
  2263                           l1595:	
  2264  074B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1449:      
                                 ((*sp++ = (' ')));
  2265                           	movlw	low(020h)
  2266  074B  3020               	movwf	(??_sprintf+0)+0
  2267  074C  00AF               	movf	(sprintf@sp),w
  2268  074D  083C               	movwf	fsr0
  2269  074E  0084               	movf	(??_sprintf+0)+0,w
  2270  074F  082F               	bcf	status, 7	;select IRP bank0
  2271  0750  1383               	movwf	indf
  2272  0751  0080               	
  2273                           l1597:	
  2274  0752                     	movlw	low(01h)
  2275  0752  3001               	movwf	(??_sprintf+0)+0
  2276  0753  00AF               	movf	(??_sprintf+0)+0,w
  2277  0754  082F               	addwf	(sprintf@sp),f
  2278  0755  07BC               	
  2279                           l1599:	
  2280  0756                     	movlw	0FFh
  2281  0756  30FF               	addwf	(sprintf@width),f
  2282  0757  07BD               	skipnc
  2283  0758  1803               	incf	(sprintf@width+1),f
  2284  0759  0ABE               	movlw	0FFh
  2285  075A  30FF               	addwf	(sprintf@width+1),f
  2286  075B  07BE               	movf	(((sprintf@width))),w
  2287  075C  083D               iorwf	(((sprintf@width+1))),w
  2288  075D  043E               	btfss	status,2
  2289  075E  1D03               	goto	u1351
  2290  075F  2F61               	goto	u1350
  2291  0760  2F62               u1351:
  2292  0761                     	goto	l1595
  2293  0761  2F4B               u1350:
  2294  0762                     	goto	l1601
  2295  0762  2F64               	
  2296                           l272:	
  2297  0763                     	goto	l1601
  2298  0763  2F64               	
  2299                           l270:	
  2300  0764                     	line	1491
  2301                           	
  2302                           l1601:	
  2303  0764                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2304                           	movf	(sprintf@c),w
  2305  0764  083F               	movwf	(??_sprintf+0)+0
  2306  0765  00AF               	clrf	(??_sprintf+0)+0+1
  2307  0766  01B0               	movf	0+(??_sprintf+0)+0,w
  2308  0767  082F               	movwf	(sprintf@prec)
  2309  0768  00B5               	movf	1+(??_sprintf+0)+0,w
  2310  0769  0830               	movwf	(sprintf@prec+1)
  2311  076A  00B6               	line	1493
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2313                           	goto	l1609
  2314  076B  2FC7               	
  2315                           l274:	
  2316  076C                     	line	1508
  2317                           	
  2318                           l1603:	
  2319  076C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2320                           	movlw	0
  2321  076C  3000               	movwf	(___llmod@divisor+3)
  2322  076D  00A3               	movlw	0
  2323  076E  3000               	movwf	(___llmod@divisor+2)
  2324  076F  00A2               	movlw	0
  2325  0770  3000               	movwf	(___llmod@divisor+1)
  2326  0771  00A1               	movlw	0Ah
  2327  0772  300A               	movwf	(___llmod@divisor)
  2328  0773  00A0               
  2329                           	movf	(sprintf@prec),w
  2330  0774  0835               	movwf	(??_sprintf+0)+0
  2331  0775  00AF               	movlw	(02h)-1
  2332  0776  3001               u1365:
  2333  0777                     	clrc
  2334  0777  1003               	rlf	(??_sprintf+0)+0,f
  2335  0778  0DAF               	addlw	-1
  2336  0779  3EFF               	skipz
  2337  077A  1D03               	goto	u1365
  2338  077B  2F77               	clrc
  2339  077C  1003               	rlf	(??_sprintf+0)+0,w
  2340  077D  0D2F               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2341  077E  3E01               	movwf	fsr0
  2342  077F  0084               	fcall	stringdir
  2343  0780  120A  118A  200D  120A  118A  	movwf	(___lldiv@divisor)
  2344  0785  00F0               	fcall	stringdir
  2345  0786  120A  118A  200D  120A  118A  	movwf	(___lldiv@divisor+1)
  2346  078B  00F1               	fcall	stringdir
  2347  078C  120A  118A  200D  120A  118A  	movwf	(___lldiv@divisor+2)
  2348  0791  00F2               	fcall	stringdir
  2349  0792  120A  118A  200D  120A  118A  	movwf	(___lldiv@divisor+3)
  2350  0797  00F3               	movf	(sprintf@val+3),w
  2351  0798  083A               	movwf	(___lldiv@dividend+3)
  2352  0799  00F7               	movf	(sprintf@val+2),w
  2353  079A  0839               	movwf	(___lldiv@dividend+2)
  2354  079B  00F6               	movf	(sprintf@val+1),w
  2355  079C  0838               	movwf	(___lldiv@dividend+1)
  2356  079D  00F5               	movf	(sprintf@val),w
  2357  079E  0837               	movwf	(___lldiv@dividend)
  2358  079F  00F4               
  2359                           	fcall	___lldiv
  2360  07A0  120A  118A  22ED  120A  118A  	movf	(3+(?___lldiv)),w
  2361  07A5  0873               	bcf	status, 5	;RP0=0, select bank0
  2362  07A6  1283               	bcf	status, 6	;RP1=0, select bank0
  2363  07A7  1303               	movwf	(___llmod@dividend+3)
  2364  07A8  00A7               	movf	(2+(?___lldiv)),w
  2365  07A9  0872               	movwf	(___llmod@dividend+2)
  2366  07AA  00A6               	movf	(1+(?___lldiv)),w
  2367  07AB  0871               	movwf	(___llmod@dividend+1)
  2368  07AC  00A5               	movf	(0+(?___lldiv)),w
  2369  07AD  0870               	movwf	(___llmod@dividend)
  2370  07AE  00A4               
  2371                           	fcall	___llmod
  2372  07AF  120A  118A  2229  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2373  07B4  1283               	bcf	status, 6	;RP1=0, select bank0
  2374  07B5  1303               	movf	(0+(?___llmod)),w
  2375  07B6  0820               	addlw	030h
  2376  07B7  3E30               	movwf	(??_sprintf+1)+0
  2377  07B8  00B0               	movf	(??_sprintf+1)+0,w
  2378  07B9  0830               	movwf	(sprintf@c)
  2379  07BA  00BF               	line	1543
  2380                           	
  2381                           l1605:	
  2382  07BB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2383                           	movf	(sprintf@c),w
  2384  07BB  083F               	movwf	(??_sprintf+0)+0
  2385  07BC  00AF               	movf	(sprintf@sp),w
  2386  07BD  083C               	movwf	fsr0
  2387  07BE  0084               	movf	(??_sprintf+0)+0,w
  2388  07BF  082F               	bcf	status, 7	;select IRP bank0
  2389  07C0  1383               	movwf	indf
  2390  07C1  0080               	
  2391                           l1607:	
  2392  07C2                     	movlw	low(01h)
  2393  07C2  3001               	movwf	(??_sprintf+0)+0
  2394  07C3  00AF               	movf	(??_sprintf+0)+0,w
  2395  07C4  082F               	addwf	(sprintf@sp),f
  2396  07C5  07BC               	goto	l1609
  2397  07C6  2FC7               	line	1544
  2398                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2399                           	
  2400                           l273:	
  2401  07C7                     	line	1493
  2402                           	
  2403                           l1609:	
  2404  07C7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2405                           	movlw	0FFh
  2406  07C7  30FF               	addwf	(sprintf@prec),f
  2407  07C8  07B5               	skipnc
  2408  07C9  1803               	incf	(sprintf@prec+1),f
  2409  07CA  0AB6               	movlw	0FFh
  2410  07CB  30FF               	addwf	(sprintf@prec+1),f
  2411  07CC  07B6               		incf	(((sprintf@prec))),w
  2412  07CD  0A35               	skipz
  2413  07CE  1D03               	goto	u1371
  2414  07CF  2FD4               	incf	(((sprintf@prec+1))),w
  2415  07D0  0A36               	btfss	status,2
  2416  07D1  1D03               	goto	u1371
  2417  07D2  2FD4               	goto	u1370
  2418  07D3  2FD5               u1371:
  2419  07D4                     	goto	l1603
  2420  07D4  2F6C               u1370:
  2421  07D5                     	goto	l1611
  2422  07D5  2FD7               	
  2423                           l275:	
  2424  07D6                     	goto	l1611
  2425  07D6  2FD7               	line	1552
  2426                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2427                           	
  2428                           l249:	
  2429  07D7                     	line	548
  2430                           	
  2431                           l1611:	
  2432  07D7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2433                           	movlw	01h
  2434  07D7  3001               	addwf	(sprintf@f),f
  2435  07D8  07AA               	movlw	-01h
  2436  07D9  30FF               	addwf	(sprintf@f),w
  2437  07DA  072A               	movwf	fsr0
  2438  07DB  0084               	fcall	stringdir
  2439  07DC  120A  118A  200D  120A  118A  	movwf	(??_sprintf+0)+0
  2440  07E1  00AF               	movf	(??_sprintf+0)+0,w
  2441  07E2  082F               	movwf	(sprintf@c)
  2442  07E3  00BF               	movf	(((sprintf@c))),w
  2443  07E4  083F               	btfss	status,2
  2444  07E5  1D03               	goto	u1381
  2445  07E6  2FE8               	goto	u1380
  2446  07E7  2FE9               u1381:
  2447  07E8                     	goto	l1541
  2448  07E8  2E1E               u1380:
  2449  07E9                     	goto	l1613
  2450  07E9  2FEB               	
  2451                           l276:	
  2452  07EA                     	goto	l1613
  2453  07EA  2FEB               	line	1554
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2455                           	
  2456                           l258:	
  2457  07EB                     	line	1557
  2458                           	
  2459                           l1613:	
  2460  07EB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2461                           	bcf	status, 5	;RP0=0, select bank0
  2462  07EB  1283               	bcf	status, 6	;RP1=0, select bank0
  2463  07EC  1303               	movf	(sprintf@sp),w
  2464  07ED  083C               	movwf	fsr0
  2465  07EE  0084               	bcf	status, 7	;select IRP bank0
  2466  07EF  1383               	clrf	indf
  2467  07F0  0180               	goto	l277
  2468  07F1  2FF2               	line	1559
  2469                           	
  2470                           l1615:	
  2471  07F2                     	line	1560
  2472                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2473                           	
  2474                           l277:	
  2475  07F2                     	return
  2476  07F2  0008               	opt stack 0
  2477                           GLOBAL	__end_of_sprintf
  2478                           	__end_of_sprintf:
  2479  07F3                     	signat	_sprintf,4698
  2480                           	global	_isdigit
  2481                           
  2482 ;; *************** function _isdigit *****************
  2483 ;; Defined at:
  2484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  c               1    wreg     unsigned char 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  c               1    1[COMMON] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;		None               void
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2498 ;;      Params:         0       0       0       0       0
  2499 ;;      Locals:         2       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0
  2501 ;;      Totals:         2       0       0       0       0
  2502 ;;Total ram usage:        2 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_sprintf
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           psect	text2,local,class=CODE,delta=2,merge=1,group=2
  2511                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2512                           	line	8
  2513                           global __ptext2
  2514                           __ptext2:	;psect for function _isdigit
  2515  012B                     psect	text2
  2516                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2517                           	line	8
  2518                           	global	__size_of_isdigit
  2519                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  2520  0014                     	
  2521                           _isdigit:	
  2522  012B                     ;incstack = 0
  2523                           	opt	stack 6
  2524                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2525                           ;isdigit@c stored from wreg
  2526                           	movwf	(isdigit@c)
  2527  012B  00F1               	line	14
  2528                           	
  2529                           l1361:	
  2530  012C                     	clrf	(_isdigit$749)
  2531  012C  01F0               	
  2532                           l1363:	
  2533  012D                     	movlw	low(03Ah)
  2534  012D  303A               	subwf	(isdigit@c),w
  2535  012E  0271               	skipnc
  2536  012F  1803               	goto	u861
  2537  0130  2932               	goto	u860
  2538  0131  2933               u861:
  2539  0132                     	goto	l1369
  2540  0132  293C               u860:
  2541  0133                     	
  2542                           l1365:	
  2543  0133                     	movlw	low(030h)
  2544  0133  3030               	subwf	(isdigit@c),w
  2545  0134  0271               	skipc
  2546  0135  1C03               	goto	u871
  2547  0136  2938               	goto	u870
  2548  0137  2939               u871:
  2549  0138                     	goto	l1369
  2550  0138  293C               u870:
  2551  0139                     	
  2552                           l1367:	
  2553  0139                     	clrf	(_isdigit$749)
  2554  0139  01F0               	incf	(_isdigit$749),f
  2555  013A  0AF0               	goto	l1369
  2556  013B  293C               	
  2557                           l708:	
  2558  013C                     	
  2559                           l1369:	
  2560  013C                     	rrf	(_isdigit$749),w
  2561  013C  0C70               	
  2562                           	goto	l709
  2563  013D  293E               	
  2564                           l1371:	
  2565  013E                     	line	15
  2566                           	
  2567                           l709:	
  2568  013E                     	return
  2569  013E  0008               	opt stack 0
  2570                           GLOBAL	__end_of_isdigit
  2571                           	__end_of_isdigit:
  2572  013F                     	signat	_isdigit,4216
  2573                           	global	___wmul
  2574                           
  2575 ;; *************** function ___wmul *****************
  2576 ;; Defined at:
  2577 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  multiplier      2    0[COMMON] unsigned int 
  2580 ;;  multiplicand    2    2[COMMON] unsigned int 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  product         2    4[COMMON] unsigned int 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2    0[COMMON] unsigned int 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         4       0       0       0       0
  2593 ;;      Locals:         2       0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0
  2595 ;;      Totals:         6       0       0       0       0
  2596 ;;Total ram usage:        6 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_sprintf
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  2605                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  2606                           	line	15
  2607                           global __ptext3
  2608                           __ptext3:	;psect for function ___wmul
  2609  0167                     psect	text3
  2610                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  2611                           	line	15
  2612                           	global	__size_of___wmul
  2613                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  2614  0028                     	
  2615                           ___wmul:	
  2616  0167                     ;incstack = 0
  2617                           	opt	stack 6
  2618                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2619                           	line	43
  2620                           	
  2621                           l1373:	
  2622  0167                     	clrf	(___wmul@product)
  2623  0167  01F4               	clrf	(___wmul@product+1)
  2624  0168  01F5               	goto	l1375
  2625  0169  296A               	line	44
  2626                           	
  2627                           l280:	
  2628  016A                     	line	45
  2629                           	
  2630                           l1375:	
  2631  016A                     	btfss	(___wmul@multiplier),(0)&7
  2632  016A  1C70               	goto	u881
  2633  016B  296D               	goto	u880
  2634  016C  296E               u881:
  2635  016D                     	goto	l281
  2636  016D  2974               u880:
  2637  016E                     	line	46
  2638                           	
  2639                           l1377:	
  2640  016E                     	movf	(___wmul@multiplicand),w
  2641  016E  0872               	addwf	(___wmul@product),f
  2642  016F  07F4               	skipnc
  2643  0170  1803               	incf	(___wmul@product+1),f
  2644  0171  0AF5               	movf	(___wmul@multiplicand+1),w
  2645  0172  0873               	addwf	(___wmul@product+1),f
  2646  0173  07F5               	
  2647                           l281:	
  2648  0174                     	line	47
  2649                           	movlw	01h
  2650  0174  3001               	
  2651                           u895:
  2652  0175                     	clrc
  2653  0175  1003               	rlf	(___wmul@multiplicand),f
  2654  0176  0DF2               	rlf	(___wmul@multiplicand+1),f
  2655  0177  0DF3               	addlw	-1
  2656  0178  3EFF               	skipz
  2657  0179  1D03               	goto	u895
  2658  017A  2975               	line	48
  2659                           	
  2660                           l1379:	
  2661  017B                     	movlw	01h
  2662  017B  3001               	
  2663                           u905:
  2664  017C                     	clrc
  2665  017C  1003               	rrf	(___wmul@multiplier+1),f
  2666  017D  0CF1               	rrf	(___wmul@multiplier),f
  2667  017E  0CF0               	addlw	-1
  2668  017F  3EFF               	skipz
  2669  0180  1D03               	goto	u905
  2670  0181  297C               	line	49
  2671                           	
  2672                           l1381:	
  2673  0182                     	movf	((___wmul@multiplier)),w
  2674  0182  0870               iorwf	((___wmul@multiplier+1)),w
  2675  0183  0471               	btfss	status,2
  2676  0184  1D03               	goto	u911
  2677  0185  2987               	goto	u910
  2678  0186  2988               u911:
  2679  0187                     	goto	l1375
  2680  0187  296A               u910:
  2681  0188                     	goto	l1383
  2682  0188  2989               	
  2683                           l282:	
  2684  0189                     	line	52
  2685                           	
  2686                           l1383:	
  2687  0189                     	movf	(___wmul@product+1),w
  2688  0189  0875               	movwf	(?___wmul+1)
  2689  018A  00F1               	movf	(___wmul@product),w
  2690  018B  0874               	movwf	(?___wmul)
  2691  018C  00F0               	goto	l283
  2692  018D  298E               	
  2693                           l1385:	
  2694  018E                     	line	53
  2695                           	
  2696                           l283:	
  2697  018E                     	return
  2698  018E  0008               	opt stack 0
  2699                           GLOBAL	__end_of___wmul
  2700                           	__end_of___wmul:
  2701  018F                     	signat	___wmul,8314
  2702                           	global	___llmod
  2703                           
  2704 ;; *************** function ___llmod *****************
  2705 ;; Defined at:
  2706 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  divisor         4    0[BANK0 ] unsigned long 
  2709 ;;  dividend        4    4[BANK0 ] unsigned long 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  counter         1    9[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  4    0[BANK0 ] unsigned long 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       8       0       0       0
  2722 ;;      Locals:         0       1       0       0       0
  2723 ;;      Temps:          0       1       0       0       0
  2724 ;;      Totals:         0      10       0       0       0
  2725 ;;Total ram usage:       10 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_sprintf
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2734                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
  2735                           	line	5
  2736                           global __ptext4
  2737                           __ptext4:	;psect for function ___llmod
  2738  0229                     psect	text4
  2739                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
  2740                           	line	5
  2741                           	global	__size_of___llmod
  2742                           	__size_of___llmod	equ	__end_of___llmod-___llmod
  2743  005D                     	
  2744                           ___llmod:	
  2745  0229                     ;incstack = 0
  2746                           	opt	stack 6
  2747                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2748                           	line	12
  2749                           	
  2750                           l1455:	
  2751  0229                     	bcf	status, 5	;RP0=0, select bank0
  2752  0229  1283               	bcf	status, 6	;RP1=0, select bank0
  2753  022A  1303               	movf	(___llmod@divisor+3),w
  2754  022B  0823               	iorwf	(___llmod@divisor+2),w
  2755  022C  0422               	iorwf	(___llmod@divisor+1),w
  2756  022D  0421               	iorwf	(___llmod@divisor),w
  2757  022E  0420               	skipnz
  2758  022F  1903               	goto	u1091
  2759  0230  2A32               	goto	u1090
  2760  0231  2A33               u1091:
  2761  0232                     	goto	l1471
  2762  0232  2A7C               u1090:
  2763  0233                     	line	13
  2764                           	
  2765                           l1457:	
  2766  0233                     	clrf	(___llmod@counter)
  2767  0233  01A9               	incf	(___llmod@counter),f
  2768  0234  0AA9               	line	14
  2769                           	goto	l1461
  2770  0235  2A44               	
  2771                           l498:	
  2772  0236                     	line	15
  2773                           	
  2774                           l1459:	
  2775  0236                     	movlw	01h
  2776  0236  3001               	movwf	(??___llmod+0)+0
  2777  0237  00A8               u1105:
  2778  0238                     	clrc
  2779  0238  1003               	rlf	(___llmod@divisor),f
  2780  0239  0DA0               	rlf	(___llmod@divisor+1),f
  2781  023A  0DA1               	rlf	(___llmod@divisor+2),f
  2782  023B  0DA2               	rlf	(___llmod@divisor+3),f
  2783  023C  0DA3               	decfsz	(??___llmod+0)+0
  2784  023D  0BA8               	goto	u1105
  2785  023E  2A38               	line	16
  2786                           	movlw	low(01h)
  2787  023F  3001               	movwf	(??___llmod+0)+0
  2788  0240  00A8               	movf	(??___llmod+0)+0,w
  2789  0241  0828               	addwf	(___llmod@counter),f
  2790  0242  07A9               	goto	l1461
  2791  0243  2A44               	line	17
  2792                           	
  2793                           l497:	
  2794  0244                     	line	14
  2795                           	
  2796                           l1461:	
  2797  0244                     	btfss	(___llmod@divisor+3),(31)&7
  2798  0244  1FA3               	goto	u1111
  2799  0245  2A47               	goto	u1110
  2800  0246  2A48               u1111:
  2801  0247                     	goto	l1459
  2802  0247  2A36               u1110:
  2803  0248                     	goto	l1463
  2804  0248  2A4A               	
  2805                           l499:	
  2806  0249                     	goto	l1463
  2807  0249  2A4A               	line	18
  2808                           	
  2809                           l500:	
  2810  024A                     	line	19
  2811                           	
  2812                           l1463:	
  2813  024A                     	movf	(___llmod@divisor+3),w
  2814  024A  0823               	subwf	(___llmod@dividend+3),w
  2815  024B  0227               	skipz
  2816  024C  1D03               	goto	u1125
  2817  024D  2A58               	movf	(___llmod@divisor+2),w
  2818  024E  0822               	subwf	(___llmod@dividend+2),w
  2819  024F  0226               	skipz
  2820  0250  1D03               	goto	u1125
  2821  0251  2A58               	movf	(___llmod@divisor+1),w
  2822  0252  0821               	subwf	(___llmod@dividend+1),w
  2823  0253  0225               	skipz
  2824  0254  1D03               	goto	u1125
  2825  0255  2A58               	movf	(___llmod@divisor),w
  2826  0256  0820               	subwf	(___llmod@dividend),w
  2827  0257  0224               u1125:
  2828  0258                     	skipc
  2829  0258  1C03               	goto	u1121
  2830  0259  2A5B               	goto	u1120
  2831  025A  2A5C               u1121:
  2832  025B                     	goto	l1467
  2833  025B  2A6B               u1120:
  2834  025C                     	line	20
  2835                           	
  2836                           l1465:	
  2837  025C                     	movf	(___llmod@divisor),w
  2838  025C  0820               	subwf	(___llmod@dividend),f
  2839  025D  02A4               	movf	(___llmod@divisor+1),w
  2840  025E  0821               	skipc
  2841  025F  1C03               	incfsz	(___llmod@divisor+1),w
  2842  0260  0F21               	subwf	(___llmod@dividend+1),f
  2843  0261  02A5               	movf	(___llmod@divisor+2),w
  2844  0262  0822               	skipc
  2845  0263  1C03               	incfsz	(___llmod@divisor+2),w
  2846  0264  0F22               	subwf	(___llmod@dividend+2),f
  2847  0265  02A6               	movf	(___llmod@divisor+3),w
  2848  0266  0823               	skipc
  2849  0267  1C03               	incfsz	(___llmod@divisor+3),w
  2850  0268  0F23               	subwf	(___llmod@dividend+3),f
  2851  0269  02A7               	goto	l1467
  2852  026A  2A6B               	
  2853                           l501:	
  2854  026B                     	line	21
  2855                           	
  2856                           l1467:	
  2857  026B                     	movlw	01h
  2858  026B  3001               u1135:
  2859  026C                     	clrc
  2860  026C  1003               	rrf	(___llmod@divisor+3),f
  2861  026D  0CA3               	rrf	(___llmod@divisor+2),f
  2862  026E  0CA2               	rrf	(___llmod@divisor+1),f
  2863  026F  0CA1               	rrf	(___llmod@divisor),f
  2864  0270  0CA0               	addlw	-1
  2865  0271  3EFF               	skipz
  2866  0272  1D03               	goto	u1135
  2867  0273  2A6C               
  2868                           	line	22
  2869                           	
  2870                           l1469:	
  2871  0274                     	movlw	01h
  2872  0274  3001               	subwf	(___llmod@counter),f
  2873  0275  02A9               	btfss	status,2
  2874  0276  1D03               	goto	u1141
  2875  0277  2A79               	goto	u1140
  2876  0278  2A7A               u1141:
  2877  0279                     	goto	l1463
  2878  0279  2A4A               u1140:
  2879  027A                     	goto	l1471
  2880  027A  2A7C               	
  2881                           l502:	
  2882  027B                     	goto	l1471
  2883  027B  2A7C               	line	23
  2884                           	
  2885                           l496:	
  2886  027C                     	line	24
  2887                           	
  2888                           l1471:	
  2889  027C                     	movf	(___llmod@dividend+3),w
  2890  027C  0827               	movwf	(?___llmod+3)
  2891  027D  00A3               	movf	(___llmod@dividend+2),w
  2892  027E  0826               	movwf	(?___llmod+2)
  2893  027F  00A2               	movf	(___llmod@dividend+1),w
  2894  0280  0825               	movwf	(?___llmod+1)
  2895  0281  00A1               	movf	(___llmod@dividend),w
  2896  0282  0824               	movwf	(?___llmod)
  2897  0283  00A0               
  2898                           	goto	l503
  2899  0284  2A85               	
  2900                           l1473:	
  2901  0285                     	line	25
  2902                           	
  2903                           l503:	
  2904  0285                     	return
  2905  0285  0008               	opt stack 0
  2906                           GLOBAL	__end_of___llmod
  2907                           	__end_of___llmod:
  2908  0286                     	signat	___llmod,8316
  2909                           	global	___lldiv
  2910                           
  2911 ;; *************** function ___lldiv *****************
  2912 ;; Defined at:
  2913 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  divisor         4    0[COMMON] unsigned long 
  2916 ;;  dividend        4    4[COMMON] unsigned long 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  quotient        4    9[COMMON] unsigned long 
  2919 ;;  counter         1   13[COMMON] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  4    0[COMMON] unsigned long 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2929 ;;      Params:         8       0       0       0       0
  2930 ;;      Locals:         5       0       0       0       0
  2931 ;;      Temps:          1       0       0       0       0
  2932 ;;      Totals:        14       0       0       0       0
  2933 ;;Total ram usage:       14 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_sprintf
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2942                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  2943                           	line	5
  2944                           global __ptext5
  2945                           __ptext5:	;psect for function ___lldiv
  2946  02ED                     psect	text5
  2947                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  2948                           	line	5
  2949                           	global	__size_of___lldiv
  2950                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  2951  006D                     	
  2952                           ___lldiv:	
  2953  02ED                     ;incstack = 0
  2954                           	opt	stack 6
  2955                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2956                           	line	13
  2957                           	
  2958                           l1387:	
  2959  02ED                     	movlw	high highword(0)
  2960  02ED  3000               	movwf	(___lldiv@quotient+3)
  2961  02EE  00FC               	movlw	low highword(0)
  2962  02EF  3000               	movwf	(___lldiv@quotient+2)
  2963  02F0  00FB               	movlw	high(0)
  2964  02F1  3000               	movwf	(___lldiv@quotient+1)
  2965  02F2  00FA               	movlw	low(0)
  2966  02F3  3000               	movwf	(___lldiv@quotient)
  2967  02F4  00F9               
  2968                           	line	14
  2969                           	movf	(___lldiv@divisor+3),w
  2970  02F5  0873               	iorwf	(___lldiv@divisor+2),w
  2971  02F6  0472               	iorwf	(___lldiv@divisor+1),w
  2972  02F7  0471               	iorwf	(___lldiv@divisor),w
  2973  02F8  0470               	skipnz
  2974  02F9  1903               	goto	u921
  2975  02FA  2AFC               	goto	u920
  2976  02FB  2AFD               u921:
  2977  02FC                     	goto	l1407
  2978  02FC  2B50               u920:
  2979  02FD                     	line	15
  2980                           	
  2981                           l1389:	
  2982  02FD                     	clrf	(___lldiv@counter)
  2983  02FD  01FD               	incf	(___lldiv@counter),f
  2984  02FE  0AFD               	line	16
  2985                           	goto	l1393
  2986  02FF  2B0E               	
  2987                           l312:	
  2988  0300                     	line	17
  2989                           	
  2990                           l1391:	
  2991  0300                     	movlw	01h
  2992  0300  3001               	movwf	(??___lldiv+0)+0
  2993  0301  00F8               u935:
  2994  0302                     	clrc
  2995  0302  1003               	rlf	(___lldiv@divisor),f
  2996  0303  0DF0               	rlf	(___lldiv@divisor+1),f
  2997  0304  0DF1               	rlf	(___lldiv@divisor+2),f
  2998  0305  0DF2               	rlf	(___lldiv@divisor+3),f
  2999  0306  0DF3               	decfsz	(??___lldiv+0)+0
  3000  0307  0BF8               	goto	u935
  3001  0308  2B02               	line	18
  3002                           	movlw	low(01h)
  3003  0309  3001               	movwf	(??___lldiv+0)+0
  3004  030A  00F8               	movf	(??___lldiv+0)+0,w
  3005  030B  0878               	addwf	(___lldiv@counter),f
  3006  030C  07FD               	goto	l1393
  3007  030D  2B0E               	line	19
  3008                           	
  3009                           l311:	
  3010  030E                     	line	16
  3011                           	
  3012                           l1393:	
  3013  030E                     	btfss	(___lldiv@divisor+3),(31)&7
  3014  030E  1FF3               	goto	u941
  3015  030F  2B11               	goto	u940
  3016  0310  2B12               u941:
  3017  0311                     	goto	l1391
  3018  0311  2B00               u940:
  3019  0312                     	goto	l1395
  3020  0312  2B14               	
  3021                           l313:	
  3022  0313                     	goto	l1395
  3023  0313  2B14               	line	20
  3024                           	
  3025                           l314:	
  3026  0314                     	line	21
  3027                           	
  3028                           l1395:	
  3029  0314                     	movlw	01h
  3030  0314  3001               	movwf	(??___lldiv+0)+0
  3031  0315  00F8               u955:
  3032  0316                     	clrc
  3033  0316  1003               	rlf	(___lldiv@quotient),f
  3034  0317  0DF9               	rlf	(___lldiv@quotient+1),f
  3035  0318  0DFA               	rlf	(___lldiv@quotient+2),f
  3036  0319  0DFB               	rlf	(___lldiv@quotient+3),f
  3037  031A  0DFC               	decfsz	(??___lldiv+0)+0
  3038  031B  0BF8               	goto	u955
  3039  031C  2B16               	line	22
  3040                           	
  3041                           l1397:	
  3042  031D                     	movf	(___lldiv@divisor+3),w
  3043  031D  0873               	subwf	(___lldiv@dividend+3),w
  3044  031E  0277               	skipz
  3045  031F  1D03               	goto	u965
  3046  0320  2B2B               	movf	(___lldiv@divisor+2),w
  3047  0321  0872               	subwf	(___lldiv@dividend+2),w
  3048  0322  0276               	skipz
  3049  0323  1D03               	goto	u965
  3050  0324  2B2B               	movf	(___lldiv@divisor+1),w
  3051  0325  0871               	subwf	(___lldiv@dividend+1),w
  3052  0326  0275               	skipz
  3053  0327  1D03               	goto	u965
  3054  0328  2B2B               	movf	(___lldiv@divisor),w
  3055  0329  0870               	subwf	(___lldiv@dividend),w
  3056  032A  0274               u965:
  3057  032B                     	skipc
  3058  032B  1C03               	goto	u961
  3059  032C  2B2E               	goto	u960
  3060  032D  2B2F               u961:
  3061  032E                     	goto	l1403
  3062  032E  2B3F               u960:
  3063  032F                     	line	23
  3064                           	
  3065                           l1399:	
  3066  032F                     	movf	(___lldiv@divisor),w
  3067  032F  0870               	subwf	(___lldiv@dividend),f
  3068  0330  02F4               	movf	(___lldiv@divisor+1),w
  3069  0331  0871               	skipc
  3070  0332  1C03               	incfsz	(___lldiv@divisor+1),w
  3071  0333  0F71               	subwf	(___lldiv@dividend+1),f
  3072  0334  02F5               	movf	(___lldiv@divisor+2),w
  3073  0335  0872               	skipc
  3074  0336  1C03               	incfsz	(___lldiv@divisor+2),w
  3075  0337  0F72               	subwf	(___lldiv@dividend+2),f
  3076  0338  02F6               	movf	(___lldiv@divisor+3),w
  3077  0339  0873               	skipc
  3078  033A  1C03               	incfsz	(___lldiv@divisor+3),w
  3079  033B  0F73               	subwf	(___lldiv@dividend+3),f
  3080  033C  02F7               	line	24
  3081                           	
  3082                           l1401:	
  3083  033D                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  3084  033D  1479               	goto	l1403
  3085  033E  2B3F               	line	25
  3086                           	
  3087                           l315:	
  3088  033F                     	line	26
  3089                           	
  3090                           l1403:	
  3091  033F                     	movlw	01h
  3092  033F  3001               u975:
  3093  0340                     	clrc
  3094  0340  1003               	rrf	(___lldiv@divisor+3),f
  3095  0341  0CF3               	rrf	(___lldiv@divisor+2),f
  3096  0342  0CF2               	rrf	(___lldiv@divisor+1),f
  3097  0343  0CF1               	rrf	(___lldiv@divisor),f
  3098  0344  0CF0               	addlw	-1
  3099  0345  3EFF               	skipz
  3100  0346  1D03               	goto	u975
  3101  0347  2B40               
  3102                           	line	27
  3103                           	
  3104                           l1405:	
  3105  0348                     	movlw	01h
  3106  0348  3001               	subwf	(___lldiv@counter),f
  3107  0349  02FD               	btfss	status,2
  3108  034A  1D03               	goto	u981
  3109  034B  2B4D               	goto	u980
  3110  034C  2B4E               u981:
  3111  034D                     	goto	l1395
  3112  034D  2B14               u980:
  3113  034E                     	goto	l1407
  3114  034E  2B50               	
  3115                           l316:	
  3116  034F                     	goto	l1407
  3117  034F  2B50               	line	28
  3118                           	
  3119                           l310:	
  3120  0350                     	line	29
  3121                           	
  3122                           l1407:	
  3123  0350                     	movf	(___lldiv@quotient+3),w
  3124  0350  087C               	movwf	(?___lldiv+3)
  3125  0351  00F3               	movf	(___lldiv@quotient+2),w
  3126  0352  087B               	movwf	(?___lldiv+2)
  3127  0353  00F2               	movf	(___lldiv@quotient+1),w
  3128  0354  087A               	movwf	(?___lldiv+1)
  3129  0355  00F1               	movf	(___lldiv@quotient),w
  3130  0356  0879               	movwf	(?___lldiv)
  3131  0357  00F0               
  3132                           	goto	l317
  3133  0358  2B59               	
  3134                           l1409:	
  3135  0359                     	line	30
  3136                           	
  3137                           l317:	
  3138  0359                     	return
  3139  0359  0008               	opt stack 0
  3140                           GLOBAL	__end_of___lldiv
  3141                           	__end_of___lldiv:
  3142  035A                     	signat	___lldiv,8316
  3143                           	global	_LCD_Init
  3144                           
  3145 ;; *************** function _LCD_Init *****************
  3146 ;; Defined at:
  3147 ;;		line 4 in file "lcd.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0
  3163 ;;      Temps:          3       0       0       0       0
  3164 ;;      Totals:         3       0       0       0       0
  3165 ;;Total ram usage:        3 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    1
  3168 ;; This function calls:
  3169 ;;		_LCD_Command
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3175                           	file	"lcd.c"
  3176                           	line	4
  3177                           global __ptext6
  3178                           __ptext6:	;psect for function _LCD_Init
  3179  018F                     psect	text6
  3180                           	file	"lcd.c"
  3181                           	line	4
  3182                           	global	__size_of_LCD_Init
  3183                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
  3184  0030                     	
  3185                           _LCD_Init:	
  3186  018F                     ;incstack = 0
  3187                           	opt	stack 6
  3188                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3189                           	line	6
  3190                           	
  3191                           l1523:	
  3192  018F                     ;lcd.c: 6:     TRISB = 1;
  3193                           	movlw	low(01h)
  3194  018F  3001               	bsf	status, 5	;RP0=1, select bank1
  3195  0190  1683               	bcf	status, 6	;RP1=0, select bank1
  3196  0191  1303               	movwf	(134)^080h	;volatile
  3197  0192  0086               	line	7
  3198                           ;lcd.c: 7:     _delay((unsigned long)((500)*(20000000/4000.0)));
  3199                           	opt asmopt_push
  3200                           opt asmopt_off
  3201                           movlw  13
  3202  0193  300D               movwf	((??_LCD_Init+0)+0+2),f
  3203  0194  00F5               movlw	175
  3204  0195  30AF               movwf	((??_LCD_Init+0)+0+1),f
  3205  0196  00F4               	movlw	182
  3206  0197  30B6               movwf	((??_LCD_Init+0)+0),f
  3207  0198  00F3               	u1577:
  3208  0199                     decfsz	((??_LCD_Init+0)+0),f
  3209  0199  0BF3               	goto	u1577
  3210  019A  2999               	decfsz	((??_LCD_Init+0)+0+1),f
  3211  019B  0BF4               	goto	u1577
  3212  019C  2999               	decfsz	((??_LCD_Init+0)+0+2),f
  3213  019D  0BF5               	goto	u1577
  3214  019E  2999               	nop
  3215  019F  0000               opt asmopt_pop
  3216                           
  3217                           	line	8
  3218                           	
  3219                           l1525:	
  3220  01A0                     ;lcd.c: 8:     LCD_Command(0x02);
  3221                           	movlw	low(02h)
  3222  01A0  3002               	fcall	_LCD_Command
  3223  01A1  120A  118A  21BF  120A  118A  	line	10
  3224                           	
  3225                           l1527:	
  3226  01A6                     ;lcd.c: 10:     LCD_Command(0x28);
  3227                           	movlw	low(028h)
  3228  01A6  3028               	fcall	_LCD_Command
  3229  01A7  120A  118A  21BF  120A  118A  	line	12
  3230                           	
  3231                           l1529:	
  3232  01AC                     ;lcd.c: 12:  LCD_Command(0x01);
  3233                           	movlw	low(01h)
  3234  01AC  3001               	fcall	_LCD_Command
  3235  01AD  120A  118A  21BF  120A  118A  	line	13
  3236                           	
  3237                           l1531:	
  3238  01B2                     ;lcd.c: 13:     LCD_Command(0x0c);
  3239                           	movlw	low(0Ch)
  3240  01B2  300C               	fcall	_LCD_Command
  3241  01B3  120A  118A  21BF  120A  118A  	line	15
  3242                           	
  3243                           l1533:	
  3244  01B8                     ;lcd.c: 15:  LCD_Command(0x06);
  3245                           	movlw	low(06h)
  3246  01B8  3006               	fcall	_LCD_Command
  3247  01B9  120A  118A  21BF  120A  118A  	line	16
  3248                           	
  3249                           l130:	
  3250  01BE                     	return
  3251  01BE  0008               	opt stack 0
  3252                           GLOBAL	__end_of_LCD_Init
  3253                           	__end_of_LCD_Init:
  3254  01BF                     	signat	_LCD_Init,89
  3255                           	global	_LCD_Clear
  3256                           
  3257 ;; *************** function _LCD_Clear *****************
  3258 ;; Defined at:
  3259 ;;		line 84 in file "lcd.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0
  3275 ;;      Temps:          2       0       0       0       0
  3276 ;;      Totals:         2       0       0       0       0
  3277 ;;Total ram usage:        2 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		_LCD_Command
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3287                           	line	84
  3288                           global __ptext7
  3289                           __ptext7:	;psect for function _LCD_Clear
  3290  0108                     psect	text7
  3291                           	file	"lcd.c"
  3292                           	line	84
  3293                           	global	__size_of_LCD_Clear
  3294                           	__size_of_LCD_Clear	equ	__end_of_LCD_Clear-_LCD_Clear
  3295  0010                     	
  3296                           _LCD_Clear:	
  3297  0108                     ;incstack = 0
  3298                           	opt	stack 6
  3299                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3300                           	line	86
  3301                           	
  3302                           l1535:	
  3303  0108                     ;lcd.c: 86:     LCD_Command(0x01);
  3304                           	movlw	low(01h)
  3305  0108  3001               	fcall	_LCD_Command
  3306  0109  120A  118A  21BF  120A  118A  	line	87
  3307                           	
  3308                           l1537:	
  3309  010E                     ;lcd.c: 87:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3310                           	opt asmopt_push
  3311                           opt asmopt_off
  3312                           movlw	20
  3313  010E  3014               movwf	((??_LCD_Clear+0)+0+1),f
  3314  010F  00F4               	movlw	121
  3315  0110  3079               movwf	((??_LCD_Clear+0)+0),f
  3316  0111  00F3               	u1587:
  3317  0112                     decfsz	((??_LCD_Clear+0)+0),f
  3318  0112  0BF3               	goto	u1587
  3319  0113  2912               	decfsz	((??_LCD_Clear+0)+0+1),f
  3320  0114  0BF4               	goto	u1587
  3321  0115  2912               	nop2
  3322  0116  2917               opt asmopt_pop
  3323                           
  3324                           	line	88
  3325                           	
  3326                           l156:	
  3327  0117                     	return
  3328  0117  0008               	opt stack 0
  3329                           GLOBAL	__end_of_LCD_Clear
  3330                           	__end_of_LCD_Clear:
  3331  0118                     	signat	_LCD_Clear,89
  3332                           	global	_GotoX
  3333                           
  3334 ;; *************** function _GotoX *****************
  3335 ;; Defined at:
  3336 ;;		line 140 in file "cnc.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  point           4    0[BANK0 ] long 
  3339 ;;  speed           1    4[BANK0 ] unsigned char 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  str            16    9[BANK0 ] unsigned char [16]
  3342 ;;  i               4   25[BANK0 ] long 
  3343 ;;  wait            2   29[BANK0 ] unsigned int 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       5       0       0       0
  3354 ;;      Locals:         0      22       0       0       0
  3355 ;;      Temps:          0       4       0       0       0
  3356 ;;      Totals:         0      31       0       0       0
  3357 ;;Total ram usage:       31 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    3
  3360 ;; This function calls:
  3361 ;;		_LCD_String_xy
  3362 ;;		___awdiv
  3363 ;;		_delay_us
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3369                           	file	"cnc.c"
  3370                           	line	140
  3371                           global __ptext8
  3372                           __ptext8:	;psect for function _GotoX
  3373  03CB                     psect	text8
  3374                           	file	"cnc.c"
  3375                           	line	140
  3376                           	global	__size_of_GotoX
  3377                           	__size_of_GotoX	equ	__end_of_GotoX-_GotoX
  3378  0110                     	
  3379                           _GotoX:	
  3380  03CB                     ;incstack = 0
  3381                           	opt	stack 4
  3382                           ; Regs used in _GotoX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3383                           	line	141
  3384                           	
  3385                           l1475:	
  3386  03CB                     ;cnc.c: 141:     long i=0;
  3387                           	movlw	high highword(0)
  3388  03CB  3000               	bcf	status, 5	;RP0=0, select bank0
  3389  03CC  1283               	bcf	status, 6	;RP1=0, select bank0
  3390  03CD  1303               	movwf	(GotoX@i+3)
  3391  03CE  00BC               	movlw	low highword(0)
  3392  03CF  3000               	movwf	(GotoX@i+2)
  3393  03D0  00BB               	movlw	high(0)
  3394  03D1  3000               	movwf	(GotoX@i+1)
  3395  03D2  00BA               	movlw	low(0)
  3396  03D3  3000               	movwf	(GotoX@i)
  3397  03D4  00B9               
  3398                           	line	142
  3399                           	
  3400                           l1477:	
  3401  03D5                     ;cnc.c: 142:     unsigned int wait = (10*100)/speed;
  3402                           	movf	(GotoX@speed),w
  3403  03D5  0824               	movwf	(??_GotoX+0)+0
  3404  03D6  00A5               	clrf	(??_GotoX+0)+0+1
  3405  03D7  01A6               	movf	0+(??_GotoX+0)+0,w
  3406  03D8  0825               	movwf	(___awdiv@divisor)
  3407  03D9  00F0               	movf	1+(??_GotoX+0)+0,w
  3408  03DA  0826               	movwf	(___awdiv@divisor+1)
  3409  03DB  00F1               	movlw	0E8h
  3410  03DC  30E8               	movwf	(___awdiv@dividend)
  3411  03DD  00F2               	movlw	03h
  3412  03DE  3003               	movwf	((___awdiv@dividend))+1
  3413  03DF  00F3               	fcall	___awdiv
  3414  03E0  120A  118A  235A  120A  118A  	movf	(1+(?___awdiv)),w
  3415  03E5  0871               	bcf	status, 5	;RP0=0, select bank0
  3416  03E6  1283               	bcf	status, 6	;RP1=0, select bank0
  3417  03E7  1303               	movwf	(GotoX@wait+1)
  3418  03E8  00BE               	movf	(0+(?___awdiv)),w
  3419  03E9  0870               	movwf	(GotoX@wait)
  3420  03EA  00BD               	line	143
  3421                           	
  3422                           l1479:	
  3423  03EB                     ;cnc.c: 143:     char str[16] = {0};
  3424                           	movlw	(GotoX@str)&0ffh
  3425  03EB  3029               	movwf	fsr0
  3426  03EC  0084               	movlw	low(GotoX@F1519)
  3427  03ED  30C2               	movwf	(??_GotoX+0)+0
  3428  03EE  00A5               	movf	fsr0,w
  3429  03EF  0804               	movwf	((??_GotoX+0)+0+1)
  3430  03F0  00A6               	movlw	16
  3431  03F1  3010               	movwf	((??_GotoX+0)+0+2)
  3432  03F2  00A7               u1150:
  3433  03F3                     	movf	(??_GotoX+0)+0,w
  3434  03F3  0825               	movwf	fsr0
  3435  03F4  0084               	bcf	status, 7	;select IRP bank1
  3436  03F5  1383               	
  3437                           	movf	indf,w
  3438  03F6  0800               	movwf	((??_GotoX+0)+0+3)
  3439  03F7  00A8               	incf	(??_GotoX+0)+0,f
  3440  03F8  0AA5               	movf	((??_GotoX+0)+0+1),w
  3441  03F9  0826               	movwf	fsr0
  3442  03FA  0084               	
  3443                           	movf	((??_GotoX+0)+0+3),w
  3444  03FB  0828               	movwf	indf
  3445  03FC  0080               	incf	((??_GotoX+0)+0+1),f
  3446  03FD  0AA6               	decfsz	((??_GotoX+0)+0+2),f
  3447  03FE  0BA7               	goto	u1150
  3448  03FF  2BF3               	
  3449                           	line	145
  3450                           	
  3451                           l1481:	
  3452  0400                     ;cnc.c: 145:     if(point>current_position.x) {
  3453                           	bsf	status, 5	;RP0=1, select bank1
  3454  0400  1683               	bcf	status, 6	;RP1=0, select bank1
  3455  0401  1303               	movf	(_current_position+3)^080h,w
  3456  0402  0823               	xorlw	80h
  3457  0403  3A80               	movwf	btemp+1
  3458  0404  00FF               	bcf	status, 5	;RP0=0, select bank0
  3459  0405  1283               	bcf	status, 6	;RP1=0, select bank0
  3460  0406  1303               	movf	(GotoX@point+3),w
  3461  0407  0823               	xorlw	80h
  3462  0408  3A80               	subwf	btemp+1,w
  3463  0409  027F               	bsf	status, 5	;RP0=1, select bank1
  3464  040A  1683               	bcf	status, 6	;RP1=0, select bank1
  3465  040B  1303               	
  3466                           	skipz
  3467  040C  1D03               	goto	u1163
  3468  040D  2C24               	bcf	status, 5	;RP0=0, select bank0
  3469  040E  1283               	bcf	status, 6	;RP1=0, select bank0
  3470  040F  1303               	movf	(GotoX@point+2),w
  3471  0410  0822               	bsf	status, 5	;RP0=1, select bank1
  3472  0411  1683               	bcf	status, 6	;RP1=0, select bank1
  3473  0412  1303               	subwf	(_current_position+2)^080h,w
  3474  0413  0222               	skipz
  3475  0414  1D03               	goto	u1163
  3476  0415  2C24               	bcf	status, 5	;RP0=0, select bank0
  3477  0416  1283               	bcf	status, 6	;RP1=0, select bank0
  3478  0417  1303               	movf	(GotoX@point+1),w
  3479  0418  0821               	bsf	status, 5	;RP0=1, select bank1
  3480  0419  1683               	bcf	status, 6	;RP1=0, select bank1
  3481  041A  1303               	subwf	(_current_position+1)^080h,w
  3482  041B  0221               	skipz
  3483  041C  1D03               	goto	u1163
  3484  041D  2C24               	bcf	status, 5	;RP0=0, select bank0
  3485  041E  1283               	bcf	status, 6	;RP1=0, select bank0
  3486  041F  1303               	movf	(GotoX@point),w
  3487  0420  0820               	bsf	status, 5	;RP0=1, select bank1
  3488  0421  1683               	bcf	status, 6	;RP1=0, select bank1
  3489  0422  1303               	subwf	(_current_position)^080h,w
  3490  0423  0220               u1163:
  3491  0424                     	skipnc
  3492  0424  1803               	goto	u1161
  3493  0425  2C27               	goto	u1160
  3494  0426  2C28               u1161:
  3495  0427                     	goto	l58
  3496  0427  2C37               u1160:
  3497  0428                     	line	146
  3498                           	
  3499                           l1483:	
  3500  0428                     ;cnc.c: 146:         PORTDbits.RD2 = 0;
  3501                           	bcf	status, 5	;RP0=0, select bank0
  3502  0428  1283               	bcf	status, 6	;RP1=0, select bank0
  3503  0429  1303               	bcf	(8),2	;volatile
  3504  042A  1108               	line	147
  3505                           	
  3506                           l1485:	
  3507  042B                     ;cnc.c: 147:         LCD_String_xy(1,0,"point>pos");
  3508                           	clrf	(LCD_String_xy@pos)
  3509  042B  01F5               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  3510  042C  3033               	movwf	(LCD_String_xy@msg)
  3511  042D  00F6               	movlw	80h
  3512  042E  3080               	movwf	(LCD_String_xy@msg+1)
  3513  042F  00F7               	movlw	low(01h)
  3514  0430  3001               	fcall	_LCD_String_xy
  3515  0431  120A  118A  2286  120A  118A  	line	148
  3516                           ;cnc.c: 148:     }
  3517                           	goto	l60
  3518  0436  2CB7               	line	149
  3519                           ;cnc.c: 149:     else {
  3520                           	
  3521                           l58:	
  3522  0437                     	line	150
  3523                           ;cnc.c: 150:         PORTDbits.RD2 = 1;
  3524                           	bcf	status, 5	;RP0=0, select bank0
  3525  0437  1283               	bcf	status, 6	;RP1=0, select bank0
  3526  0438  1303               	bsf	(8),2	;volatile
  3527  0439  1508               	line	151
  3528                           	
  3529                           l1487:	
  3530  043A                     ;cnc.c: 151:         LCD_String_xy(1,0,"point<pos");
  3531                           	clrf	(LCD_String_xy@pos)
  3532  043A  01F5               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3533  043B  3029               	movwf	(LCD_String_xy@msg)
  3534  043C  00F6               	movlw	80h
  3535  043D  3080               	movwf	(LCD_String_xy@msg+1)
  3536  043E  00F7               	movlw	low(01h)
  3537  043F  3001               	fcall	_LCD_String_xy
  3538  0440  120A  118A  2286  120A  118A  	goto	l60
  3539  0445  2CB7               	line	152
  3540                           ;cnc.c: 152:     }
  3541                           	
  3542                           l59:	
  3543  0446                     	line	153
  3544                           ;cnc.c: 153:     while(current_position.x!=point) {
  3545                           	goto	l60
  3546  0446  2CB7               	
  3547                           l61:	
  3548  0447                     	line	154
  3549                           ;cnc.c: 154:         if (!PORTAbits.RA1) current_position.xlimit_min = 1;
  3550                           	bcf	status, 5	;RP0=0, select bank0
  3551  0447  1283               	bcf	status, 6	;RP1=0, select bank0
  3552  0448  1303               	btfsc	(5),1	;volatile
  3553  0449  1885               	goto	u1171
  3554  044A  2C4C               	goto	u1170
  3555  044B  2C4D               u1171:
  3556  044C                     	goto	l62
  3557  044C  2C51               u1170:
  3558  044D                     	
  3559                           l1489:	
  3560  044D                     	bsf	status, 5	;RP0=1, select bank1
  3561  044D  1683               	bcf	status, 6	;RP1=0, select bank1
  3562  044E  1303               	clrf	0+(_current_position)^080h+0Dh
  3563  044F  01AD               	incf	0+(_current_position)^080h+0Dh,f
  3564  0450  0AAD               	
  3565                           l62:	
  3566  0451                     	line	155
  3567                           ;cnc.c: 155:         if (!PORTAbits.RA0) current_position.xlimit_max = 1;
  3568                           	bcf	status, 5	;RP0=0, select bank0
  3569  0451  1283               	btfsc	(5),0	;volatile
  3570  0452  1805               	goto	u1181
  3571  0453  2C55               	goto	u1180
  3572  0454  2C56               u1181:
  3573  0455                     	goto	l1493
  3574  0455  2C5B               u1180:
  3575  0456                     	
  3576                           l1491:	
  3577  0456                     	bsf	status, 5	;RP0=1, select bank1
  3578  0456  1683               	bcf	status, 6	;RP1=0, select bank1
  3579  0457  1303               	clrf	0+(_current_position)^080h+0Ch
  3580  0458  01AC               	incf	0+(_current_position)^080h+0Ch,f
  3581  0459  0AAC               	goto	l1493
  3582  045A  2C5B               	
  3583                           l63:	
  3584  045B                     	line	156
  3585                           	
  3586                           l1493:	
  3587  045B                     ;cnc.c: 156:         if (current_position.xlimit_min && PORTDbits.RD2 == 1) break;
  3588                           	bsf	status, 5	;RP0=1, select bank1
  3589  045B  1683               	bcf	status, 6	;RP1=0, select bank1
  3590  045C  1303               	movf	(0+(_current_position)^080h+0Dh),w
  3591  045D  082D               	btfsc	status,2
  3592  045E  1903               	goto	u1191
  3593  045F  2C61               	goto	u1190
  3594  0460  2C62               u1191:
  3595  0461                     	goto	l1501
  3596  0461  2C6B               u1190:
  3597  0462                     	
  3598                           l1495:	
  3599  0462                     	bcf	status, 5	;RP0=0, select bank0
  3600  0462  1283               	bcf	status, 6	;RP1=0, select bank0
  3601  0463  1303               	btfss	(8),2	;volatile
  3602  0464  1D08               	goto	u1201
  3603  0465  2C67               	goto	u1200
  3604  0466  2C68               u1201:
  3605  0467                     	goto	l1501
  3606  0467  2C6B               u1200:
  3607  0468                     	goto	l71
  3608  0468  2CDA               	
  3609                           l1497:	
  3610  0469                     	goto	l71
  3611  0469  2CDA               	
  3612                           l1499:	
  3613  046A                     	goto	l60
  3614  046A  2CB7               	line	157
  3615                           ;cnc.c: 157:         else if(current_position.xlimit_max && PORTDbits.RD2 == 0) break;
  3616                           	
  3617                           l64:	
  3618  046B                     	
  3619                           l1501:	
  3620  046B                     	bsf	status, 5	;RP0=1, select bank1
  3621  046B  1683               	bcf	status, 6	;RP1=0, select bank1
  3622  046C  1303               	movf	(0+(_current_position)^080h+0Ch),w
  3623  046D  082C               	btfsc	status,2
  3624  046E  1903               	goto	u1211
  3625  046F  2C71               	goto	u1210
  3626  0470  2C72               u1211:
  3627  0471                     	goto	l1509
  3628  0471  2C7B               u1210:
  3629  0472                     	
  3630                           l1503:	
  3631  0472                     	bcf	status, 5	;RP0=0, select bank0
  3632  0472  1283               	bcf	status, 6	;RP1=0, select bank0
  3633  0473  1303               	btfsc	(8),2	;volatile
  3634  0474  1908               	goto	u1221
  3635  0475  2C77               	goto	u1220
  3636  0476  2C78               u1221:
  3637  0477                     	goto	l1509
  3638  0477  2C7B               u1220:
  3639  0478                     	goto	l71
  3640  0478  2CDA               	
  3641                           l1505:	
  3642  0479                     	goto	l71
  3643  0479  2CDA               	
  3644                           l1507:	
  3645  047A                     	goto	l60
  3646  047A  2CB7               	line	158
  3647                           ;cnc.c: 158:         else {
  3648                           	
  3649                           l67:	
  3650  047B                     	line	159
  3651                           	
  3652                           l1509:	
  3653  047B                     ;cnc.c: 159:             delay_us(wait);
  3654                           	bcf	status, 5	;RP0=0, select bank0
  3655  047B  1283               	movf	(GotoX@wait+1),w
  3656  047C  083E               	movwf	(delay_us@val+1)
  3657  047D  00F1               	movf	(GotoX@wait),w
  3658  047E  083D               	movwf	(delay_us@val)
  3659  047F  00F0               	fcall	_delay_us
  3660  0480  120A  118A  2118  120A  118A  	line	160
  3661                           	
  3662                           l1511:	
  3663  0485                     ;cnc.c: 160:             PORTDbits.RD1 = 1;
  3664                           	bcf	status, 5	;RP0=0, select bank0
  3665  0485  1283               	bcf	status, 6	;RP1=0, select bank0
  3666  0486  1303               	bsf	(8),1	;volatile
  3667  0487  1488               	line	161
  3668                           	
  3669                           l1513:	
  3670  0488                     ;cnc.c: 161:             _delay((unsigned long)((5)*(20000000/4000000.0)));
  3671                           	opt asmopt_push
  3672                           opt asmopt_off
  3673                           	movlw	7
  3674  0488  3007               	bcf	status, 5	;RP0=0, select bank0
  3675  0489  1283               	bcf	status, 6	;RP1=0, select bank0
  3676  048A  1303               movwf	((??_GotoX+0)+0),f
  3677  048B  00A5               	u1597:
  3678  048C                     decfsz	(??_GotoX+0)+0,f
  3679  048C  0BA5               	goto	u1597
  3680  048D  2C8C               	nop
  3681  048E  0000               opt asmopt_pop
  3682                           
  3683                           	line	162
  3684                           	
  3685                           l1515:	
  3686  048F                     ;cnc.c: 162:             PORTDbits.RD1 = 0;
  3687                           	bcf	status, 5	;RP0=0, select bank0
  3688  048F  1283               	bcf	status, 6	;RP1=0, select bank0
  3689  0490  1303               	bcf	(8),1	;volatile
  3690  0491  1088               	line	163
  3691                           	
  3692                           l1517:	
  3693  0492                     ;cnc.c: 163:            if(PORTDbits.RD2==0) {
  3694                           	btfsc	(8),2	;volatile
  3695  0492  1908               	goto	u1231
  3696  0493  2C95               	goto	u1230
  3697  0494  2C96               u1231:
  3698  0495                     	goto	l1521
  3699  0495  2CA7               u1230:
  3700  0496                     	line	164
  3701                           	
  3702                           l1519:	
  3703  0496                     ;cnc.c: 164:                current_position.x++;
  3704                           	movlw	01h
  3705  0496  3001               	bsf	status, 5	;RP0=1, select bank1
  3706  0497  1683               	bcf	status, 6	;RP1=0, select bank1
  3707  0498  1303               	addwf	(_current_position)^080h,f
  3708  0499  07A0               	movlw	0
  3709  049A  3000               	skipnc
  3710  049B  1803               movlw 1
  3711  049C  3001               	addwf	(_current_position+1)^080h,f
  3712  049D  07A1               	movlw	0
  3713  049E  3000               	skipnc
  3714  049F  1803               movlw 1
  3715  04A0  3001               	addwf	(_current_position+2)^080h,f
  3716  04A1  07A2               	movlw	0
  3717  04A2  3000               	skipnc
  3718  04A3  1803               movlw 1
  3719  04A4  3001               	addwf	(_current_position+3)^080h,f
  3720  04A5  07A3               	line	165
  3721                           ;cnc.c: 165:            }
  3722                           	goto	l60
  3723  04A6  2CB7               	line	166
  3724                           ;cnc.c: 166:            else {
  3725                           	
  3726                           l69:	
  3727  04A7                     	line	167
  3728                           	
  3729                           l1521:	
  3730  04A7                     ;cnc.c: 167:                current_position.x--;
  3731                           	movlw	0FFh
  3732  04A7  30FF               	bsf	status, 5	;RP0=1, select bank1
  3733  04A8  1683               	bcf	status, 6	;RP1=0, select bank1
  3734  04A9  1303               	addwf	(_current_position)^080h,f
  3735  04AA  07A0               	movlw	0FFh
  3736  04AB  30FF               	skipc
  3737  04AC  1C03               	addwf	(_current_position+1)^080h,f
  3738  04AD  07A1               	movlw	0FFh
  3739  04AE  30FF               	skipc
  3740  04AF  1C03               	addwf	(_current_position+2)^080h,f
  3741  04B0  07A2               	movlw	0FFh
  3742  04B1  30FF               	skipc
  3743  04B2  1C03               	addwf	(_current_position+3)^080h,f
  3744  04B3  07A3               	goto	l60
  3745  04B4  2CB7               	line	168
  3746                           ;cnc.c: 168:            }
  3747                           	
  3748                           l70:	
  3749  04B5                     	goto	l60
  3750  04B5  2CB7               	line	169
  3751                           ;cnc.c: 169:         }
  3752                           	
  3753                           l68:	
  3754  04B6                     	goto	l60
  3755  04B6  2CB7               	
  3756                           l66:	
  3757  04B7                     	line	170
  3758                           ;cnc.c: 170:     }
  3759                           	
  3760                           l60:	
  3761  04B7                     	line	153
  3762                           ;cnc.c: 153:     while(current_position.x!=point) {
  3763                           	bcf	status, 5	;RP0=0, select bank0
  3764  04B7  1283               	bcf	status, 6	;RP1=0, select bank0
  3765  04B8  1303               	movf	(GotoX@point+3),w
  3766  04B9  0823               	bsf	status, 5	;RP0=1, select bank1
  3767  04BA  1683               	bcf	status, 6	;RP1=0, select bank1
  3768  04BB  1303               	xorwf	(_current_position+3)^080h,w
  3769  04BC  0623               	skipz
  3770  04BD  1D03               	goto	u1245
  3771  04BE  2CD5               	bcf	status, 5	;RP0=0, select bank0
  3772  04BF  1283               	bcf	status, 6	;RP1=0, select bank0
  3773  04C0  1303               	movf	(GotoX@point+2),w
  3774  04C1  0822               	bsf	status, 5	;RP0=1, select bank1
  3775  04C2  1683               	bcf	status, 6	;RP1=0, select bank1
  3776  04C3  1303               	xorwf	(_current_position+2)^080h,w
  3777  04C4  0622               	skipz
  3778  04C5  1D03               	goto	u1245
  3779  04C6  2CD5               	bcf	status, 5	;RP0=0, select bank0
  3780  04C7  1283               	bcf	status, 6	;RP1=0, select bank0
  3781  04C8  1303               	movf	(GotoX@point+1),w
  3782  04C9  0821               	bsf	status, 5	;RP0=1, select bank1
  3783  04CA  1683               	bcf	status, 6	;RP1=0, select bank1
  3784  04CB  1303               	xorwf	(_current_position+1)^080h,w
  3785  04CC  0621               	skipz
  3786  04CD  1D03               	goto	u1245
  3787  04CE  2CD5               	bcf	status, 5	;RP0=0, select bank0
  3788  04CF  1283               	bcf	status, 6	;RP1=0, select bank0
  3789  04D0  1303               	movf	(GotoX@point),w
  3790  04D1  0820               	bsf	status, 5	;RP0=1, select bank1
  3791  04D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3792  04D3  1303               	xorwf	(_current_position)^080h,w
  3793  04D4  0620               u1245:
  3794  04D5                     	skipz
  3795  04D5  1D03               	goto	u1241
  3796  04D6  2CD8               	goto	u1240
  3797  04D7  2CD9               u1241:
  3798  04D8                     	goto	l61
  3799  04D8  2C47               u1240:
  3800  04D9                     	goto	l71
  3801  04D9  2CDA               	
  3802                           l65:	
  3803  04DA                     	line	171
  3804                           	
  3805                           l71:	
  3806  04DA                     	return
  3807  04DA  0008               	opt stack 0
  3808                           GLOBAL	__end_of_GotoX
  3809                           	__end_of_GotoX:
  3810  04DB                     	signat	_GotoX,8313
  3811                           	global	_delay_us
  3812                           
  3813 ;; *************** function _delay_us *****************
  3814 ;; Defined at:
  3815 ;;		line 123 in file "cnc.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  val             2    0[COMMON] unsigned int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         2       0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0
  3832 ;;      Totals:         2       0       0       0       0
  3833 ;;Total ram usage:        2 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_GotoX
  3839 ;;		_StepX
  3840 ;;		_StepY
  3841 ;;		_StepZ
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3845                           	line	123
  3846                           global __ptext9
  3847                           __ptext9:	;psect for function _delay_us
  3848  0118                     psect	text9
  3849                           	file	"cnc.c"
  3850                           	line	123
  3851                           	global	__size_of_delay_us
  3852                           	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
  3853  0013                     	
  3854                           _delay_us:	
  3855  0118                     ;incstack = 0
  3856                           	opt	stack 6
  3857                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  3858                           	line	124
  3859                           	
  3860                           l1323:	
  3861  0118                     ;cnc.c: 124:     while(val > 0){
  3862                           	goto	l1327
  3863  0118  2923               	
  3864                           l44:	
  3865  0119                     	line	125
  3866                           ;cnc.c: 125:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  3867                           		opt asmopt_push
  3868                           	opt asmopt_off
  3869                           	nop2	;2 cycle nop
  3870  0119  291A               	nop2	;2 cycle nop
  3871  011A  291B               	nop
  3872  011B  0000               	opt asmopt_pop
  3873                           
  3874                           	line	126
  3875                           	
  3876                           l1325:	
  3877  011C                     ;cnc.c: 126:         val--;
  3878                           	movlw	01h
  3879  011C  3001               	subwf	(delay_us@val),f
  3880  011D  02F0               	movlw	0
  3881  011E  3000               	skipc
  3882  011F  1C03               	decf	(delay_us@val+1),f
  3883  0120  03F1               	subwf	(delay_us@val+1),f
  3884  0121  02F1               	goto	l1327
  3885  0122  2923               	line	127
  3886                           ;cnc.c: 127:     }
  3887                           	
  3888                           l43:	
  3889  0123                     	line	124
  3890                           	
  3891                           l1327:	
  3892  0123                     ;cnc.c: 124:     while(val > 0){
  3893                           	movf	((delay_us@val)),w
  3894  0123  0870               iorwf	((delay_us@val+1)),w
  3895  0124  0471               	btfss	status,2
  3896  0125  1D03               	goto	u811
  3897  0126  2928               	goto	u810
  3898  0127  2929               u811:
  3899  0128                     	goto	l44
  3900  0128  2919               u810:
  3901  0129                     	goto	l46
  3902  0129  292A               	
  3903                           l45:	
  3904  012A                     	line	128
  3905                           	
  3906                           l46:	
  3907  012A                     	return
  3908  012A  0008               	opt stack 0
  3909                           GLOBAL	__end_of_delay_us
  3910                           	__end_of_delay_us:
  3911  012B                     	signat	_delay_us,4217
  3912                           	global	___awdiv
  3913                           
  3914 ;; *************** function ___awdiv *****************
  3915 ;; Defined at:
  3916 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  divisor         2    0[COMMON] int 
  3919 ;;  dividend        2    2[COMMON] int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  quotient        2    7[COMMON] int 
  3922 ;;  sign            1    6[COMMON] unsigned char 
  3923 ;;  counter         1    5[COMMON] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2    0[COMMON] int 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         4       0       0       0       0
  3934 ;;      Locals:         4       0       0       0       0
  3935 ;;      Temps:          1       0       0       0       0
  3936 ;;      Totals:         9       0       0       0       0
  3937 ;;Total ram usage:        9 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_GotoX
  3943 ;;		_StepX
  3944 ;;		_StepY
  3945 ;;		_StepZ
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  3949                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3950                           	line	5
  3951                           global __ptext10
  3952                           __ptext10:	;psect for function ___awdiv
  3953  035A                     psect	text10
  3954                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3955                           	line	5
  3956                           	global	__size_of___awdiv
  3957                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3958  0071                     	
  3959                           ___awdiv:	
  3960  035A                     ;incstack = 0
  3961                           	opt	stack 6
  3962                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3963                           	line	13
  3964                           	
  3965                           l1411:	
  3966  035A                     	clrf	(___awdiv@sign)
  3967  035A  01F6               	line	14
  3968                           	
  3969                           l1413:	
  3970  035B                     	btfss	(___awdiv@divisor+1),7
  3971  035B  1FF1               	goto	u991
  3972  035C  2B5E               	goto	u990
  3973  035D  2B5F               u991:
  3974  035E                     	goto	l1419
  3975  035E  2B67               u990:
  3976  035F                     	line	15
  3977                           	
  3978                           l1415:	
  3979  035F                     	comf	(___awdiv@divisor),f
  3980  035F  09F0               	comf	(___awdiv@divisor+1),f
  3981  0360  09F1               	incf	(___awdiv@divisor),f
  3982  0361  0AF0               	skipnz
  3983  0362  1903               	incf	(___awdiv@divisor+1),f
  3984  0363  0AF1               	line	16
  3985                           	
  3986                           l1417:	
  3987  0364                     	clrf	(___awdiv@sign)
  3988  0364  01F6               	incf	(___awdiv@sign),f
  3989  0365  0AF6               	goto	l1419
  3990  0366  2B67               	line	17
  3991                           	
  3992                           l424:	
  3993  0367                     	line	18
  3994                           	
  3995                           l1419:	
  3996  0367                     	btfss	(___awdiv@dividend+1),7
  3997  0367  1FF3               	goto	u1001
  3998  0368  2B6A               	goto	u1000
  3999  0369  2B6B               u1001:
  4000  036A                     	goto	l1425
  4001  036A  2B75               u1000:
  4002  036B                     	line	19
  4003                           	
  4004                           l1421:	
  4005  036B                     	comf	(___awdiv@dividend),f
  4006  036B  09F2               	comf	(___awdiv@dividend+1),f
  4007  036C  09F3               	incf	(___awdiv@dividend),f
  4008  036D  0AF2               	skipnz
  4009  036E  1903               	incf	(___awdiv@dividend+1),f
  4010  036F  0AF3               	line	20
  4011                           	
  4012                           l1423:	
  4013  0370                     	movlw	low(01h)
  4014  0370  3001               	movwf	(??___awdiv+0)+0
  4015  0371  00F4               	movf	(??___awdiv+0)+0,w
  4016  0372  0874               	xorwf	(___awdiv@sign),f
  4017  0373  06F6               	goto	l1425
  4018  0374  2B75               	line	21
  4019                           	
  4020                           l425:	
  4021  0375                     	line	22
  4022                           	
  4023                           l1425:	
  4024  0375                     	clrf	(___awdiv@quotient)
  4025  0375  01F7               	clrf	(___awdiv@quotient+1)
  4026  0376  01F8               	line	23
  4027                           	
  4028                           l1427:	
  4029  0377                     	movf	((___awdiv@divisor)),w
  4030  0377  0870               iorwf	((___awdiv@divisor+1)),w
  4031  0378  0471               	btfsc	status,2
  4032  0379  1903               	goto	u1011
  4033  037A  2B7C               	goto	u1010
  4034  037B  2B7D               u1011:
  4035  037C                     	goto	l1447
  4036  037C  2BBA               u1010:
  4037  037D                     	line	24
  4038                           	
  4039                           l1429:	
  4040  037D                     	clrf	(___awdiv@counter)
  4041  037D  01F5               	incf	(___awdiv@counter),f
  4042  037E  0AF5               	line	25
  4043                           	goto	l1435
  4044  037F  2B8C               	
  4045                           l428:	
  4046  0380                     	line	26
  4047                           	
  4048                           l1431:	
  4049  0380                     	movlw	01h
  4050  0380  3001               	
  4051                           u1025:
  4052  0381                     	clrc
  4053  0381  1003               	rlf	(___awdiv@divisor),f
  4054  0382  0DF0               	rlf	(___awdiv@divisor+1),f
  4055  0383  0DF1               	addlw	-1
  4056  0384  3EFF               	skipz
  4057  0385  1D03               	goto	u1025
  4058  0386  2B81               	line	27
  4059                           	
  4060                           l1433:	
  4061  0387                     	movlw	low(01h)
  4062  0387  3001               	movwf	(??___awdiv+0)+0
  4063  0388  00F4               	movf	(??___awdiv+0)+0,w
  4064  0389  0874               	addwf	(___awdiv@counter),f
  4065  038A  07F5               	goto	l1435
  4066  038B  2B8C               	line	28
  4067                           	
  4068                           l427:	
  4069  038C                     	line	25
  4070                           	
  4071                           l1435:	
  4072  038C                     	btfss	(___awdiv@divisor+1),(15)&7
  4073  038C  1FF1               	goto	u1031
  4074  038D  2B8F               	goto	u1030
  4075  038E  2B90               u1031:
  4076  038F                     	goto	l1431
  4077  038F  2B80               u1030:
  4078  0390                     	goto	l1437
  4079  0390  2B92               	
  4080                           l429:	
  4081  0391                     	goto	l1437
  4082  0391  2B92               	line	29
  4083                           	
  4084                           l430:	
  4085  0392                     	line	30
  4086                           	
  4087                           l1437:	
  4088  0392                     	movlw	01h
  4089  0392  3001               	
  4090                           u1045:
  4091  0393                     	clrc
  4092  0393  1003               	rlf	(___awdiv@quotient),f
  4093  0394  0DF7               	rlf	(___awdiv@quotient+1),f
  4094  0395  0DF8               	addlw	-1
  4095  0396  3EFF               	skipz
  4096  0397  1D03               	goto	u1045
  4097  0398  2B93               	line	31
  4098                           	movf	(___awdiv@divisor+1),w
  4099  0399  0871               	subwf	(___awdiv@dividend+1),w
  4100  039A  0273               	skipz
  4101  039B  1D03               	goto	u1055
  4102  039C  2B9F               	movf	(___awdiv@divisor),w
  4103  039D  0870               	subwf	(___awdiv@dividend),w
  4104  039E  0272               u1055:
  4105  039F                     	skipc
  4106  039F  1C03               	goto	u1051
  4107  03A0  2BA2               	goto	u1050
  4108  03A1  2BA3               u1051:
  4109  03A2                     	goto	l1443
  4110  03A2  2BAB               u1050:
  4111  03A3                     	line	32
  4112                           	
  4113                           l1439:	
  4114  03A3                     	movf	(___awdiv@divisor),w
  4115  03A3  0870               	subwf	(___awdiv@dividend),f
  4116  03A4  02F2               	movf	(___awdiv@divisor+1),w
  4117  03A5  0871               	skipc
  4118  03A6  1C03               	decf	(___awdiv@dividend+1),f
  4119  03A7  03F3               	subwf	(___awdiv@dividend+1),f
  4120  03A8  02F3               	line	33
  4121                           	
  4122                           l1441:	
  4123  03A9                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4124  03A9  1477               	goto	l1443
  4125  03AA  2BAB               	line	34
  4126                           	
  4127                           l431:	
  4128  03AB                     	line	35
  4129                           	
  4130                           l1443:	
  4131  03AB                     	movlw	01h
  4132  03AB  3001               	
  4133                           u1065:
  4134  03AC                     	clrc
  4135  03AC  1003               	rrf	(___awdiv@divisor+1),f
  4136  03AD  0CF1               	rrf	(___awdiv@divisor),f
  4137  03AE  0CF0               	addlw	-1
  4138  03AF  3EFF               	skipz
  4139  03B0  1D03               	goto	u1065
  4140  03B1  2BAC               	line	36
  4141                           	
  4142                           l1445:	
  4143  03B2                     	movlw	01h
  4144  03B2  3001               	subwf	(___awdiv@counter),f
  4145  03B3  02F5               	btfss	status,2
  4146  03B4  1D03               	goto	u1071
  4147  03B5  2BB7               	goto	u1070
  4148  03B6  2BB8               u1071:
  4149  03B7                     	goto	l1437
  4150  03B7  2B92               u1070:
  4151  03B8                     	goto	l1447
  4152  03B8  2BBA               	
  4153                           l432:	
  4154  03B9                     	goto	l1447
  4155  03B9  2BBA               	line	37
  4156                           	
  4157                           l426:	
  4158  03BA                     	line	38
  4159                           	
  4160                           l1447:	
  4161  03BA                     	movf	((___awdiv@sign)),w
  4162  03BA  0876               	btfsc	status,2
  4163  03BB  1903               	goto	u1081
  4164  03BC  2BBE               	goto	u1080
  4165  03BD  2BBF               u1081:
  4166  03BE                     	goto	l1451
  4167  03BE  2BC5               u1080:
  4168  03BF                     	line	39
  4169                           	
  4170                           l1449:	
  4171  03BF                     	comf	(___awdiv@quotient),f
  4172  03BF  09F7               	comf	(___awdiv@quotient+1),f
  4173  03C0  09F8               	incf	(___awdiv@quotient),f
  4174  03C1  0AF7               	skipnz
  4175  03C2  1903               	incf	(___awdiv@quotient+1),f
  4176  03C3  0AF8               	goto	l1451
  4177  03C4  2BC5               	
  4178                           l433:	
  4179  03C5                     	line	40
  4180                           	
  4181                           l1451:	
  4182  03C5                     	movf	(___awdiv@quotient+1),w
  4183  03C5  0878               	movwf	(?___awdiv+1)
  4184  03C6  00F1               	movf	(___awdiv@quotient),w
  4185  03C7  0877               	movwf	(?___awdiv)
  4186  03C8  00F0               	goto	l434
  4187  03C9  2BCA               	
  4188                           l1453:	
  4189  03CA                     	line	41
  4190                           	
  4191                           l434:	
  4192  03CA                     	return
  4193  03CA  0008               	opt stack 0
  4194                           GLOBAL	__end_of___awdiv
  4195                           	__end_of___awdiv:
  4196  03CB                     	signat	___awdiv,8314
  4197                           	global	_LCD_String_xy
  4198                           
  4199 ;; *************** function _LCD_String_xy *****************
  4200 ;; Defined at:
  4201 ;;		line 57 in file "lcd.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  row             1    wreg     unsigned char 
  4204 ;;  pos             1    5[COMMON] unsigned char 
  4205 ;;  msg             2    6[COMMON] PTR const unsigned char 
  4206 ;;		 -> STR_9(2), STR_8(2), STR_6(8), STR_5(8), 
  4207 ;;		 -> STR_4(8), STR_3(6), main@str(16), STR_2(10), 
  4208 ;;		 -> STR_1(10), 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  row             1    9[COMMON] unsigned char 
  4211 ;;  location        1   10[COMMON] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4221 ;;      Params:         3       0       0       0       0
  4222 ;;      Locals:         2       0       0       0       0
  4223 ;;      Temps:          1       0       0       0       0
  4224 ;;      Totals:         6       0       0       0       0
  4225 ;;Total ram usage:        6 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    2
  4228 ;; This function calls:
  4229 ;;		_LCD_Command
  4230 ;;		_LCD_String
  4231 ;; This function is called by:
  4232 ;;		_GotoX
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4237                           	file	"lcd.c"
  4238                           	line	57
  4239                           global __ptext11
  4240                           __ptext11:	;psect for function _LCD_String_xy
  4241  0286                     psect	text11
  4242                           	file	"lcd.c"
  4243                           	line	57
  4244                           	global	__size_of_LCD_String_xy
  4245                           	__size_of_LCD_String_xy	equ	__end_of_LCD_String_xy-_LCD_String_xy
  4246  0067                     	
  4247                           _LCD_String_xy:	
  4248  0286                     ;incstack = 0
  4249                           	opt	stack 5
  4250                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4251                           ;LCD_String_xy@row stored from wreg
  4252                           	movwf	(LCD_String_xy@row)
  4253  0286  00F9               	line	59
  4254                           	
  4255                           l1329:	
  4256  0287                     ;lcd.c: 57: void LCD_String_xy(char row,char pos,const char *msg);lcd.c: 58: {;lcd.c: 59
                                 :     char location=0;
  4257                           	clrf	(LCD_String_xy@location)
  4258  0287  01FA               	line	60
  4259                           	
  4260                           l1331:	
  4261  0288                     ;lcd.c: 60:     if(row==1)
  4262                           		decf	((LCD_String_xy@row)),w
  4263  0288  0379               	btfss	status,2
  4264  0289  1D03               	goto	u821
  4265  028A  2A8C               	goto	u820
  4266  028B  2A8D               u821:
  4267  028C                     	goto	l1337
  4268  028C  2A9A               u820:
  4269  028D                     	line	62
  4270                           	
  4271                           l1333:	
  4272  028D                     ;lcd.c: 61:     {;lcd.c: 62:         location=(0x80) | ((pos) & 0x0f);
  4273                           	movf	(LCD_String_xy@pos),w
  4274  028D  0875               	andlw	0Fh
  4275  028E  390F               	iorlw	080h
  4276  028F  3880               	movwf	(??_LCD_String_xy+0)+0
  4277  0290  00F8               	movf	(??_LCD_String_xy+0)+0,w
  4278  0291  0878               	movwf	(LCD_String_xy@location)
  4279  0292  00FA               	line	63
  4280                           	
  4281                           l1335:	
  4282  0293                     ;lcd.c: 63:         LCD_Command(location);
  4283                           	movf	(LCD_String_xy@location),w
  4284  0293  087A               	fcall	_LCD_Command
  4285  0294  120A  118A  21BF  120A  118A  	line	64
  4286                           ;lcd.c: 64:     }
  4287                           	goto	l1359
  4288  0299  2AE3               	line	65
  4289                           ;lcd.c: 65:     else if(row==2){
  4290                           	
  4291                           l145:	
  4292  029A                     	
  4293                           l1337:	
  4294  029A                     		movlw	2
  4295  029A  3002               	xorwf	((LCD_String_xy@row)),w
  4296  029B  0679               	btfss	status,2
  4297  029C  1D03               	goto	u831
  4298  029D  2A9F               	goto	u830
  4299  029E  2AA0               u831:
  4300  029F                     	goto	l1343
  4301  029F  2AAD               u830:
  4302  02A0                     	line	66
  4303                           	
  4304                           l1339:	
  4305  02A0                     ;lcd.c: 66:         location=(0xc0) | ((pos) & 0x0f);
  4306                           	movf	(LCD_String_xy@pos),w
  4307  02A0  0875               	andlw	0Fh
  4308  02A1  390F               	iorlw	0C0h
  4309  02A2  38C0               	movwf	(??_LCD_String_xy+0)+0
  4310  02A3  00F8               	movf	(??_LCD_String_xy+0)+0,w
  4311  02A4  0878               	movwf	(LCD_String_xy@location)
  4312  02A5  00FA               	line	67
  4313                           	
  4314                           l1341:	
  4315  02A6                     ;lcd.c: 67:         LCD_Command(location);
  4316                           	movf	(LCD_String_xy@location),w
  4317  02A6  087A               	fcall	_LCD_Command
  4318  02A7  120A  118A  21BF  120A  118A  	line	68
  4319                           ;lcd.c: 68:     }
  4320                           	goto	l1359
  4321  02AC  2AE3               	line	69
  4322                           ;lcd.c: 69:     else if(row==3){
  4323                           	
  4324                           l147:	
  4325  02AD                     	
  4326                           l1343:	
  4327  02AD                     		movlw	3
  4328  02AD  3003               	xorwf	((LCD_String_xy@row)),w
  4329  02AE  0679               	btfss	status,2
  4330  02AF  1D03               	goto	u841
  4331  02B0  2AB2               	goto	u840
  4332  02B1  2AB3               u841:
  4333  02B2                     	goto	l1349
  4334  02B2  2AC0               u840:
  4335  02B3                     	line	70
  4336                           	
  4337                           l1345:	
  4338  02B3                     ;lcd.c: 70:         location=(0x90) | ((pos) & 0x0f);
  4339                           	movf	(LCD_String_xy@pos),w
  4340  02B3  0875               	andlw	0Fh
  4341  02B4  390F               	iorlw	090h
  4342  02B5  3890               	movwf	(??_LCD_String_xy+0)+0
  4343  02B6  00F8               	movf	(??_LCD_String_xy+0)+0,w
  4344  02B7  0878               	movwf	(LCD_String_xy@location)
  4345  02B8  00FA               	line	71
  4346                           	
  4347                           l1347:	
  4348  02B9                     ;lcd.c: 71:         LCD_Command(location);
  4349                           	movf	(LCD_String_xy@location),w
  4350  02B9  087A               	fcall	_LCD_Command
  4351  02BA  120A  118A  21BF  120A  118A  	line	72
  4352                           ;lcd.c: 72:     }
  4353                           	goto	l1359
  4354  02BF  2AE3               	line	73
  4355                           ;lcd.c: 73:     else if(row==4){
  4356                           	
  4357                           l149:	
  4358  02C0                     	
  4359                           l1349:	
  4360  02C0                     		movlw	4
  4361  02C0  3004               	xorwf	((LCD_String_xy@row)),w
  4362  02C1  0679               	btfss	status,2
  4363  02C2  1D03               	goto	u851
  4364  02C3  2AC5               	goto	u850
  4365  02C4  2AC6               u851:
  4366  02C5                     	goto	l1355
  4367  02C5  2AD3               u850:
  4368  02C6                     	line	74
  4369                           	
  4370                           l1351:	
  4371  02C6                     ;lcd.c: 74:         location=(0xD0) | ((pos) & 0x0f);
  4372                           	movf	(LCD_String_xy@pos),w
  4373  02C6  0875               	andlw	0Fh
  4374  02C7  390F               	iorlw	0D0h
  4375  02C8  38D0               	movwf	(??_LCD_String_xy+0)+0
  4376  02C9  00F8               	movf	(??_LCD_String_xy+0)+0,w
  4377  02CA  0878               	movwf	(LCD_String_xy@location)
  4378  02CB  00FA               	line	75
  4379                           	
  4380                           l1353:	
  4381  02CC                     ;lcd.c: 75:         LCD_Command(location);
  4382                           	movf	(LCD_String_xy@location),w
  4383  02CC  087A               	fcall	_LCD_Command
  4384  02CD  120A  118A  21BF  120A  118A  	line	76
  4385                           ;lcd.c: 76:     }
  4386                           	goto	l1359
  4387  02D2  2AE3               	line	77
  4388                           ;lcd.c: 77:     else
  4389                           	
  4390                           l151:	
  4391  02D3                     	line	79
  4392                           	
  4393                           l1355:	
  4394  02D3                     ;lcd.c: 78:     {;lcd.c: 79:         location=(0xC0) | ((pos) & 0x0f);
  4395                           	movf	(LCD_String_xy@pos),w
  4396  02D3  0875               	andlw	0Fh
  4397  02D4  390F               	iorlw	0C0h
  4398  02D5  38C0               	movwf	(??_LCD_String_xy+0)+0
  4399  02D6  00F8               	movf	(??_LCD_String_xy+0)+0,w
  4400  02D7  0878               	movwf	(LCD_String_xy@location)
  4401  02D8  00FA               	line	80
  4402                           	
  4403                           l1357:	
  4404  02D9                     ;lcd.c: 80:         LCD_Command(location);
  4405                           	movf	(LCD_String_xy@location),w
  4406  02D9  087A               	fcall	_LCD_Command
  4407  02DA  120A  118A  21BF  120A  118A  	goto	l1359
  4408  02DF  2AE3               	line	81
  4409                           ;lcd.c: 81:     }
  4410                           	
  4411                           l152:	
  4412  02E0                     	goto	l1359
  4413  02E0  2AE3               	
  4414                           l150:	
  4415  02E1                     	goto	l1359
  4416  02E1  2AE3               	
  4417                           l148:	
  4418  02E2                     	goto	l1359
  4419  02E2  2AE3               	
  4420                           l146:	
  4421  02E3                     	line	82
  4422                           	
  4423                           l1359:	
  4424  02E3                     ;lcd.c: 82:     LCD_String(msg);
  4425                           		movf	(LCD_String_xy@msg),w
  4426  02E3  0876               	movwf	(LCD_String@msg)
  4427  02E4  00F3               movf	(LCD_String_xy@msg+1),w
  4428  02E5  0877               movwf	(LCD_String@msg+1)
  4429  02E6  00F4               
  4430                           	fcall	_LCD_String
  4431  02E7  120A  118A  213F  120A  118A  	line	83
  4432                           	
  4433                           l153:	
  4434  02EC                     	return
  4435  02EC  0008               	opt stack 0
  4436                           GLOBAL	__end_of_LCD_String_xy
  4437                           	__end_of_LCD_String_xy:
  4438  02ED                     	signat	_LCD_String_xy,12409
  4439                           	global	_LCD_String
  4440                           
  4441 ;; *************** function _LCD_String *****************
  4442 ;; Defined at:
  4443 ;;		line 48 in file "lcd.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  msg             2    3[COMMON] PTR const unsigned char 
  4446 ;;		 -> STR_9(2), STR_8(2), STR_6(8), STR_5(8), 
  4447 ;;		 -> STR_4(8), STR_3(6), main@str(16), STR_2(10), 
  4448 ;;		 -> STR_1(10), 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         2       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0
  4463 ;;      Totals:         2       0       0       0       0
  4464 ;;Total ram usage:        2 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    1
  4467 ;; This function calls:
  4468 ;;		_LCD_Char
  4469 ;; This function is called by:
  4470 ;;		_LCD_String_xy
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4474                           	line	48
  4475                           global __ptext12
  4476                           __ptext12:	;psect for function _LCD_String
  4477  013F                     psect	text12
  4478                           	file	"lcd.c"
  4479                           	line	48
  4480                           	global	__size_of_LCD_String
  4481                           	__size_of_LCD_String	equ	__end_of_LCD_String-_LCD_String
  4482  0028                     	
  4483                           _LCD_String:	
  4484  013F                     ;incstack = 0
  4485                           	opt	stack 5
  4486                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4487                           	line	50
  4488                           	
  4489                           l1315:	
  4490  013F                     ;lcd.c: 48: void LCD_String(const char *msg);lcd.c: 49: {;lcd.c: 50:  while((*msg)!=0)
  4491                           	goto	l1321
  4492  013F  2955               	
  4493                           l140:	
  4494  0140                     	line	52
  4495                           	
  4496                           l1317:	
  4497  0140                     ;lcd.c: 51:  {;lcd.c: 52:    LCD_Char(*msg);
  4498                           	movf	(LCD_String@msg+1),w
  4499  0140  0874               	bcf	status, 5	;RP0=0, select bank0
  4500  0141  1283               	bcf	status, 6	;RP1=0, select bank0
  4501  0142  1303               	movwf	btemp+1
  4502  0143  00FF               	movf	(LCD_String@msg),w
  4503  0144  0873               	movwf	fsr0
  4504  0145  0084               	fcall	stringtab
  4505  0146  120A  118A  2003  120A  118A  	fcall	_LCD_Char
  4506  014B  120A  118A  21F4  120A  118A  	line	53
  4507                           	
  4508                           l1319:	
  4509  0150                     ;lcd.c: 53:    msg++;
  4510                           	movlw	01h
  4511  0150  3001               	addwf	(LCD_String@msg),f
  4512  0151  07F3               	skipnc
  4513  0152  1803               	incf	(LCD_String@msg+1),f
  4514  0153  0AF4               	goto	l1321
  4515  0154  2955               	line	54
  4516                           ;lcd.c: 54:     }
  4517                           	
  4518                           l139:	
  4519  0155                     	line	50
  4520                           	
  4521                           l1321:	
  4522  0155                     ;lcd.c: 50:  while((*msg)!=0)
  4523                           	movf	(LCD_String@msg+1),w
  4524  0155  0874               	bcf	status, 5	;RP0=0, select bank0
  4525  0156  1283               	bcf	status, 6	;RP1=0, select bank0
  4526  0157  1303               	movwf	btemp+1
  4527  0158  00FF               	movf	(LCD_String@msg),w
  4528  0159  0873               	movwf	fsr0
  4529  015A  0084               	fcall	stringtab
  4530  015B  120A  118A  2003  120A  118A  	xorlw	0
  4531  0160  3A00               	skipz
  4532  0161  1D03               	goto	u801
  4533  0162  2964               	goto	u800
  4534  0163  2965               u801:
  4535  0164                     	goto	l1317
  4536  0164  2940               u800:
  4537  0165                     	goto	l142
  4538  0165  2966               	
  4539                           l141:	
  4540  0166                     	line	55
  4541                           	
  4542                           l142:	
  4543  0166                     	return
  4544  0166  0008               	opt stack 0
  4545                           GLOBAL	__end_of_LCD_String
  4546                           	__end_of_LCD_String:
  4547  0167                     	signat	_LCD_String,4217
  4548                           	global	_LCD_Char
  4549                           
  4550 ;; *************** function _LCD_Char *****************
  4551 ;; Defined at:
  4552 ;;		line 33 in file "lcd.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  dat             1    wreg     unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  dat             1    2[COMMON] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4566 ;;      Params:         0       0       0       0       0
  4567 ;;      Locals:         1       0       0       0       0
  4568 ;;      Temps:          2       0       0       0       0
  4569 ;;      Totals:         3       0       0       0       0
  4570 ;;Total ram usage:        3 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_LCD_String
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4579                           	line	33
  4580                           global __ptext13
  4581                           __ptext13:	;psect for function _LCD_Char
  4582  01F4                     psect	text13
  4583                           	file	"lcd.c"
  4584                           	line	33
  4585                           	global	__size_of_LCD_Char
  4586                           	__size_of_LCD_Char	equ	__end_of_LCD_Char-_LCD_Char
  4587  0035                     	
  4588                           _LCD_Char:	
  4589  01F4                     ;incstack = 0
  4590                           	opt	stack 5
  4591                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  4592                           ;LCD_Char@dat stored from wreg
  4593                           	movwf	(LCD_Char@dat)
  4594  01F4  00F2               	line	35
  4595                           	
  4596                           l1275:	
  4597  01F5                     ;lcd.c: 33: void LCD_Char(unsigned char dat);lcd.c: 34: {;lcd.c: 35:  PORTB = (PORTB & 0
                                 x0f) | (0xF0 & dat);
  4598                           	movlw	low(0F0h)
  4599  01F5  30F0               	andwf	(LCD_Char@dat),w
  4600  01F6  0572               	movwf	(??_LCD_Char+0)+0
  4601  01F7  00F0               	bcf	status, 5	;RP0=0, select bank0
  4602  01F8  1283               	bcf	status, 6	;RP1=0, select bank0
  4603  01F9  1303               	movf	(6),w	;volatile
  4604  01FA  0806               	andlw	0Fh
  4605  01FB  390F               	iorwf	0+(??_LCD_Char+0)+0,w
  4606  01FC  0470               	movwf	(6)	;volatile
  4607  01FD  0086               	line	36
  4608                           	
  4609                           l1277:	
  4610  01FE                     ;lcd.c: 36:  PORTBbits.RB1 = 1;
  4611                           	bsf	(6),1	;volatile
  4612  01FE  1486               	line	37
  4613                           	
  4614                           l1279:	
  4615  01FF                     ;lcd.c: 37:  PORTBbits.RB2 = 1;
  4616                           	bsf	(6),2	;volatile
  4617  01FF  1506               	line	38
  4618                           	
  4619                           l1281:	
  4620  0200                     ;lcd.c: 38:  __nop();
  4621                           	opt	asmopt_push
  4622                           	opt	asmopt_off
  4623                           	nop
  4624  0200  0000               	opt	asmopt_pop
  4625                           	line	39
  4626                           	
  4627                           l1283:	
  4628  0201                     ;lcd.c: 39:  PORTBbits.RB2 = 0;
  4629                           	bcf	status, 5	;RP0=0, select bank0
  4630  0201  1283               	bcf	status, 6	;RP1=0, select bank0
  4631  0202  1303               	bcf	(6),2	;volatile
  4632  0203  1106               	line	40
  4633                           	
  4634                           l1285:	
  4635  0204                     ;lcd.c: 40:  _delay((unsigned long)((1)*(20000000/4000.0)));
  4636                           	opt asmopt_push
  4637                           opt asmopt_off
  4638                           movlw	7
  4639  0204  3007               movwf	((??_LCD_Char+0)+0+1),f
  4640  0205  00F1               	movlw	125
  4641  0206  307D               movwf	((??_LCD_Char+0)+0),f
  4642  0207  00F0               	u1607:
  4643  0208                     decfsz	((??_LCD_Char+0)+0),f
  4644  0208  0BF0               	goto	u1607
  4645  0209  2A08               	decfsz	((??_LCD_Char+0)+0+1),f
  4646  020A  0BF1               	goto	u1607
  4647  020B  2A08               opt asmopt_pop
  4648                           
  4649                           	line	41
  4650                           	
  4651                           l1287:	
  4652  020C                     ;lcd.c: 41:     PORTB = (PORTB & 0x0f) | (dat<<4);
  4653                           	movf	(LCD_Char@dat),w
  4654  020C  0872               	movwf	(??_LCD_Char+0)+0
  4655  020D  00F0               	movlw	04h
  4656  020E  3004               u785:
  4657  020F                     	clrc
  4658  020F  1003               	rlf	(??_LCD_Char+0)+0,f
  4659  0210  0DF0               	addlw	-1
  4660  0211  3EFF               	skipz
  4661  0212  1D03               	goto	u785
  4662  0213  2A0F               	bcf	status, 5	;RP0=0, select bank0
  4663  0214  1283               	bcf	status, 6	;RP1=0, select bank0
  4664  0215  1303               	movf	(6),w	;volatile
  4665  0216  0806               	andlw	0Fh
  4666  0217  390F               	iorwf	0+(??_LCD_Char+0)+0,w
  4667  0218  0470               	movwf	(6)	;volatile
  4668  0219  0086               	line	42
  4669                           	
  4670                           l1289:	
  4671  021A                     ;lcd.c: 42:  PORTBbits.RB2 = 1;
  4672                           	bsf	(6),2	;volatile
  4673  021A  1506               	line	43
  4674                           	
  4675                           l1291:	
  4676  021B                     ;lcd.c: 43:  __nop();
  4677                           	opt	asmopt_push
  4678                           	opt	asmopt_off
  4679                           	nop
  4680  021B  0000               	opt	asmopt_pop
  4681                           	line	44
  4682                           	
  4683                           l1293:	
  4684  021C                     ;lcd.c: 44:  PORTBbits.RB2 = 0;
  4685                           	bcf	status, 5	;RP0=0, select bank0
  4686  021C  1283               	bcf	status, 6	;RP1=0, select bank0
  4687  021D  1303               	bcf	(6),2	;volatile
  4688  021E  1106               	line	45
  4689                           ;lcd.c: 45:  _delay((unsigned long)((3)*(20000000/4000.0)));
  4690                           	opt asmopt_push
  4691                           opt asmopt_off
  4692                           movlw	20
  4693  021F  3014               movwf	((??_LCD_Char+0)+0+1),f
  4694  0220  00F1               	movlw	121
  4695  0221  3079               movwf	((??_LCD_Char+0)+0),f
  4696  0222  00F0               	u1617:
  4697  0223                     decfsz	((??_LCD_Char+0)+0),f
  4698  0223  0BF0               	goto	u1617
  4699  0224  2A23               	decfsz	((??_LCD_Char+0)+0+1),f
  4700  0225  0BF1               	goto	u1617
  4701  0226  2A23               	nop2
  4702  0227  2A28               opt asmopt_pop
  4703                           
  4704                           	line	46
  4705                           	
  4706                           l136:	
  4707  0228                     	return
  4708  0228  0008               	opt stack 0
  4709                           GLOBAL	__end_of_LCD_Char
  4710                           	__end_of_LCD_Char:
  4711  0229                     	signat	_LCD_Char,4217
  4712                           	global	_LCD_Command
  4713                           
  4714 ;; *************** function _LCD_Command *****************
  4715 ;; Defined at:
  4716 ;;		line 18 in file "lcd.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  cmd             1    wreg     unsigned char 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  cmd             1    2[COMMON] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4730 ;;      Params:         0       0       0       0       0
  4731 ;;      Locals:         1       0       0       0       0
  4732 ;;      Temps:          2       0       0       0       0
  4733 ;;      Totals:         3       0       0       0       0
  4734 ;;Total ram usage:        3 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_LCD_Init
  4740 ;;		_LCD_String_xy
  4741 ;;		_LCD_Clear
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4745                           	line	18
  4746                           global __ptext14
  4747                           __ptext14:	;psect for function _LCD_Command
  4748  01BF                     psect	text14
  4749                           	file	"lcd.c"
  4750                           	line	18
  4751                           	global	__size_of_LCD_Command
  4752                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
  4753  0035                     	
  4754                           _LCD_Command:	
  4755  01BF                     ;incstack = 0
  4756                           	opt	stack 6
  4757                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  4758                           ;LCD_Command@cmd stored from wreg
  4759                           	movwf	(LCD_Command@cmd)
  4760  01BF  00F2               	line	20
  4761                           	
  4762                           l1295:	
  4763  01C0                     ;lcd.c: 18: void LCD_Command(unsigned char cmd );lcd.c: 19: {;lcd.c: 20:  PORTB = (PORTB
                                  & 0x0f) |(0xF0 & cmd);
  4764                           	movlw	low(0F0h)
  4765  01C0  30F0               	andwf	(LCD_Command@cmd),w
  4766  01C1  0572               	movwf	(??_LCD_Command+0)+0
  4767  01C2  00F0               	bcf	status, 5	;RP0=0, select bank0
  4768  01C3  1283               	bcf	status, 6	;RP1=0, select bank0
  4769  01C4  1303               	movf	(6),w	;volatile
  4770  01C5  0806               	andlw	0Fh
  4771  01C6  390F               	iorwf	0+(??_LCD_Command+0)+0,w
  4772  01C7  0470               	movwf	(6)	;volatile
  4773  01C8  0086               	line	21
  4774                           	
  4775                           l1297:	
  4776  01C9                     ;lcd.c: 21:  PORTBbits.RB1 = 0;
  4777                           	bcf	(6),1	;volatile
  4778  01C9  1086               	line	22
  4779                           	
  4780                           l1299:	
  4781  01CA                     ;lcd.c: 22:  PORTBbits.RB2 = 1;
  4782                           	bsf	(6),2	;volatile
  4783  01CA  1506               	line	23
  4784                           	
  4785                           l1301:	
  4786  01CB                     ;lcd.c: 23:  __nop();
  4787                           	opt	asmopt_push
  4788                           	opt	asmopt_off
  4789                           	nop
  4790  01CB  0000               	opt	asmopt_pop
  4791                           	line	24
  4792                           	
  4793                           l1303:	
  4794  01CC                     ;lcd.c: 24:  PORTBbits.RB2 = 0;
  4795                           	bcf	status, 5	;RP0=0, select bank0
  4796  01CC  1283               	bcf	status, 6	;RP1=0, select bank0
  4797  01CD  1303               	bcf	(6),2	;volatile
  4798  01CE  1106               	line	25
  4799                           	
  4800                           l1305:	
  4801  01CF                     ;lcd.c: 25:  _delay((unsigned long)((1)*(20000000/4000.0)));
  4802                           	opt asmopt_push
  4803                           opt asmopt_off
  4804                           movlw	7
  4805  01CF  3007               movwf	((??_LCD_Command+0)+0+1),f
  4806  01D0  00F1               	movlw	125
  4807  01D1  307D               movwf	((??_LCD_Command+0)+0),f
  4808  01D2  00F0               	u1627:
  4809  01D3                     decfsz	((??_LCD_Command+0)+0),f
  4810  01D3  0BF0               	goto	u1627
  4811  01D4  29D3               	decfsz	((??_LCD_Command+0)+0+1),f
  4812  01D5  0BF1               	goto	u1627
  4813  01D6  29D3               opt asmopt_pop
  4814                           
  4815                           	line	26
  4816                           	
  4817                           l1307:	
  4818  01D7                     ;lcd.c: 26:     PORTB = (PORTB & 0x0f) | (cmd<<4);
  4819                           	movf	(LCD_Command@cmd),w
  4820  01D7  0872               	movwf	(??_LCD_Command+0)+0
  4821  01D8  00F0               	movlw	04h
  4822  01D9  3004               u795:
  4823  01DA                     	clrc
  4824  01DA  1003               	rlf	(??_LCD_Command+0)+0,f
  4825  01DB  0DF0               	addlw	-1
  4826  01DC  3EFF               	skipz
  4827  01DD  1D03               	goto	u795
  4828  01DE  29DA               	bcf	status, 5	;RP0=0, select bank0
  4829  01DF  1283               	bcf	status, 6	;RP1=0, select bank0
  4830  01E0  1303               	movf	(6),w	;volatile
  4831  01E1  0806               	andlw	0Fh
  4832  01E2  390F               	iorwf	0+(??_LCD_Command+0)+0,w
  4833  01E3  0470               	movwf	(6)	;volatile
  4834  01E4  0086               	line	27
  4835                           	
  4836                           l1309:	
  4837  01E5                     ;lcd.c: 27:  PORTBbits.RB2 = 1;
  4838                           	bsf	(6),2	;volatile
  4839  01E5  1506               	line	28
  4840                           	
  4841                           l1311:	
  4842  01E6                     ;lcd.c: 28:  __nop();
  4843                           	opt	asmopt_push
  4844                           	opt	asmopt_off
  4845                           	nop
  4846  01E6  0000               	opt	asmopt_pop
  4847                           	line	29
  4848                           	
  4849                           l1313:	
  4850  01E7                     ;lcd.c: 29:  PORTBbits.RB2 = 0;
  4851                           	bcf	status, 5	;RP0=0, select bank0
  4852  01E7  1283               	bcf	status, 6	;RP1=0, select bank0
  4853  01E8  1303               	bcf	(6),2	;volatile
  4854  01E9  1106               	line	30
  4855                           ;lcd.c: 30:  _delay((unsigned long)((3)*(20000000/4000.0)));
  4856                           	opt asmopt_push
  4857                           opt asmopt_off
  4858                           movlw	20
  4859  01EA  3014               movwf	((??_LCD_Command+0)+0+1),f
  4860  01EB  00F1               	movlw	121
  4861  01EC  3079               movwf	((??_LCD_Command+0)+0),f
  4862  01ED  00F0               	u1637:
  4863  01EE                     decfsz	((??_LCD_Command+0)+0),f
  4864  01EE  0BF0               	goto	u1637
  4865  01EF  29EE               	decfsz	((??_LCD_Command+0)+0+1),f
  4866  01F0  0BF1               	goto	u1637
  4867  01F1  29EE               	nop2
  4868  01F2  29F3               opt asmopt_pop
  4869                           
  4870                           	line	31
  4871                           	
  4872                           l133:	
  4873  01F3                     	return
  4874  01F3  0008               	opt stack 0
  4875                           GLOBAL	__end_of_LCD_Command
  4876                           	__end_of_LCD_Command:
  4877  01F4                     	signat	_LCD_Command,4217
  4878                           global	___latbits
  4879                           ___latbits	equ	2
  4880  0002                     	global	btemp
  4881                           	btemp set 07Eh
  4882  007E                     
  4883                           	DABS	1,126,2	;btemp
  4884                           	global	wtemp0
  4885                           	wtemp0 set btemp+0
  4886  007E                     	end


Data Sizes:
    Strings     57
    Constant    40
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      70
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[8]), STR_3(CODE[6]), main@str(BANK0[16]), STR_2(CODE[10]), 
		 -> STR_1(CODE[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[8]), STR_3(CODE[6]), main@str(BANK0[16]), STR_2(CODE[10]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___llmod->___lldiv
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _GotoX->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___llmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    7206
                                             32 BANK0     38    38      0
                              _GotoX
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    25      5    1708
                                             10 BANK0     22    17      5
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0      44
                                              3 COMMON     3     3      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _GotoX                                               31    26      5    3391
                                              0 BANK0     31    26      5
                      _LCD_String_xy
                            ___awdiv
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             2     0      2     327
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        6     3      3    1913
                                              5 COMMON     6     3      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     165
                                              3 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GotoX
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     ___awdiv
     _delay_us
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      86       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      46       5       87.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      86      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 06 02:23:42 2019

                      pc 0002              __CFG_CP$OFF 0000             ?_LCD_Command 0070  
                     l43 0123                       l44 0119                       l60 04B7  
                     l45 012A                       l61 0447                       l46 012A  
                     l70 04B5                       l62 0451                       l71 04DA  
                     l63 045B                       l64 046B                       l65 04DA  
                     l66 04B7                       l58 0437                       l67 047B  
                     l59 0446                       l68 04B6                       l69 04A7  
           ___awdiv@sign 0076                       fsr 0004      ___wmul@multiplicand 0072  
            ?_LCD_String 0073                      l110 0600                      l102 0593  
                    l111 0601                      l103 059D                      l112 0602  
                    l104 05B7                      l113 0612                      l105 05CD  
                    l130 01BE                      l114 0613                      l106 05EB  
                    l115 0613                      l140 0140                      l108 05DA  
                    l133 01F3                      l141 0166                      l109 05FC  
                    l142 0166                      l150 02E1                      l310 0350  
                    l151 02D3                      l311 030E                      l136 0228  
                    l152 02E0                      l312 0300                      l153 02EC  
                    l145 029A                      l313 0313                      l146 02E3  
                    l314 0314                      l250 061E                      l139 0155  
                    l147 02AD                      l315 033F                      l251 0630  
                    l148 02E2                      l156 0117                      l316 034F  
                    l500 024A                      l260 068B                      l252 0686  
                    l149 02C0                      l317 0359                      l501 026B  
                    l261 068C                      l253 0648                      l430 0392  
                    l502 027B                      l270 0764                      l262 06B1  
                    l254 0685                      l431 03AB                      l503 0285  
                    l271 074B                      l263 06C8                      l255 0687  
                    l432 03B9                      l424 0367                      l280 016A  
                    l272 0763                      l264 06DB                      l256 0692  
                    l433 03C5                      l425 0375                      l281 0174  
                    l249 07D7                      l273 07C7                      l265 06E5  
                    l257 0688                      l434 03CA                      l426 03BA  
                    l282 0189                      l258 07EB                      l274 076C  
                    l266 0728                      l427 038C                      l283 018E  
                    l275 07D6                      l267 071D                      l259 0689  
                    l428 0380                      l276 07EA                      l268 073F  
                    l429 0391                      l277 07F2                      l269 0744  
                    l708 013C                      l709 013E                      l496 027C  
                    l497 0244                      l498 0236                      l499 0249  
           __CFG_CPD$OFF 0000                      u800 0165                      u801 0164  
                    u810 0129                      u811 0128                      u820 028D  
                    u821 028C                      u830 02A0                      u910 0188  
                    u831 029F                      u911 0187                      u840 02B3  
                    u920 02FD                      u841 02B2                      u921 02FC  
                    u905 017C                      u850 02C6                      u851 02C5  
                    u940 0312                      u860 0133                      u941 0311  
                    u861 0132                      u870 0139                      u935 0302  
                    u871 0138                      u960 032F                      u880 016E  
                    u785 020F                      u961 032E                      u881 016D  
                    u795 01DA                      u955 0316                      u980 034E  
                    u981 034D                      u965 032B                      u990 035F  
                    u991 035E                      u975 0340                      u895 0175  
             GotoX@F1519 00C2                      fsr0 0004                      indf 0000  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000              LCD_Char@dat 0072  
                   l1301 01CB                     l1311 01E6                     l1303 01CC  
                   l1313 01E7                     l1305 01CF                     l1321 0155  
                   l1401 033D                     l1307 01D7                     l1315 013F  
                   l1331 0288                     l1411 035A                     l1323 0118  
                   l1403 033F                     l1309 01E5                     l1317 0140  
                   l1341 02A6                     l1333 028D                     l1421 036B  
                   l1413 035B                     l1325 011C                     l1501 046B  
                   l1405 0348                     l1319 0150                     l1351 02C6  
                   l1343 02AD                     l1335 0293                     l1431 0380  
                   l1423 0370                     l1415 035F                     l1327 0123  
                   l1511 0485                     l1503 0472                     l1407 0350  
                   l1281 0200                     l1353 02CC                     l1345 02B3  
                   l1337 029A                     l1329 0287                     l1441 03A9  
                   l1433 0387                     l1425 0375                     l1417 0364  
                   l1521 04A7                     l1513 0488                     l1505 0479  
                   l1409 0359                     l1361 012C                     l1601 0764  
                   l1291 021B                     l1283 0201                     l1275 01F5  
                   l1355 02D3                     l1347 02B9                     l1339 02A0  
                   l1451 03C5                     l1443 03AB                     l1435 038C  
                   l1427 0377                     l1419 0367                     l1515 048F  
                   l1507 047A                     l1531 01B2                     l1523 018F  
                   l1371 013E                     l1363 012D                     l1603 076C  
                   l1611 07D7                     l1293 021C                     l1285 0204  
                   l1277 01FE                     l1357 02D9                     l1349 02C0  
                   l1453 03CA                     l1445 03B2                     l1437 0392  
                   l1429 037D                     l1517 0492                     l1509 047B  
                   l1533 01B8                     l1525 01A0                     l1461 0244  
                   l1381 0182                     l1373 0167                     l1365 0133  
                   l1605 07BB                     l1613 07EB                     l1541 061E  
                   l1701 0507                     l1295 01C0                     l1287 020C  
                   l1279 01FF                     l1359 02E3                     l1439 03A3  
                   l1447 03BA                     l1519 0496                     l1535 0108  
                   l1527 01A6                     l1391 0300                     l1463 024A  
                   l1471 027C                     l1455 0229                     l1383 0189  
                   l1375 016A                     l1367 0139                     l1615 07F2  
                   l1607 07C2                     l1551 0643                     l1543 0624  
                   l1711 0517                     l1703 050B                     l1297 01C9  
                   l1289 021A                     l1449 03BF                     l1481 0400  
                   l1537 010E                     l1529 01AC                     l1393 030E  
                   l1473 0285                     l1465 025C                     l1457 0233  
                   l1385 018E                     l1377 016E                     l1369 013C  
                   l1609 07C7                     l1561 068C                     l1553 0648  
                   l1545 062B                     l1721 0533                     l1713 051A  
                   l1705 050E                     l1299 01CA                     l1491 0456  
                   l1483 0428                     l1475 03CB                     l1395 0314  
                   l1387 02ED                     l1467 026B                     l1459 0236  
                   l1379 017B                     l1571 06C8                     l1563 0691  
                   l1555 065D                     l1547 0630                     l1539 0619  
                   l1731 0588                     l1723 053E                     l1715 051E  
                   l1707 0511                     l1493 045B                     l1485 042B  
                   l1477 03D5                     l1397 031D                     l1389 02FD  
                   l1469 0274                     l1581 06E5                     l1573 06D6  
                   l1557 0670                     l1565 0692                     l1549 0633  
                   l1741 05B7                     l1733 058B                     l1725 0549  
                   l1717 0523                     l1709 0514                     l1495 0462  
                   l1487 043A                     l1479 03EB                     l1399 032F  
                   l1591 073F                     l1583 071C                     l1575 06DB  
                   l1567 06B5                     l1559 0674                     l1751 05EB  
                   l1743 05BB                     l1735 058F                     l1727 0554  
                   l1719 0528                     l1497 0469                     l1489 044D  
                   l1593 0744                     l1585 071D                     l1577 06DD  
                   l1569 06C3                     l1753 05FC                     l1745 05CD  
                   l1737 0598                     l1729 0578                     l1499 046A  
                   l1595 074B                     l1579 06E4                     l1587 0728  
                   l1755 0602                     l1747 05D4                     l1739 059D  
                   l1597 0752                     l1589 0733                     l1749 05DA  
                   l1693 04DB                     l1599 0756                     l1695 04F2  
                   l1777 06A6                     l1697 0501                     l1699 0504  
                   STR_1 0045                     STR_2 003B                     STR_3 0067  
                   STR_4 004F                     STR_5 0057                     STR_6 005F  
                   STR_7 006D                     STR_8 0072                     STR_9 0055  
                   u1000 036B                     u1001 036A                     u1010 037D  
                   u1011 037C                     u1030 0390                     u1110 0248  
                   u1031 038F                     u1111 0247                     u1200 0468  
                   u1120 025C                     u1025 0381                     u1201 0467  
                   u1121 025B                     u1105 0238                     u1050 03A3  
                   u1210 0472                     u1051 03A2                     u1211 0471  
                   u1220 0478                     u1140 027A                     u1045 0393  
                   u1221 0477                     u1141 0279                     u1125 0258  
                   u1070 03B8                     u1230 0496                     u1150 03F3  
                   u1310 071B                     u1071 03B7                     u1055 039F  
                   u1231 0495                     u1135 026C                     u1311 071A  
                   u1080 03BF                     u1240 04D9                     u1160 0428  
                   u1320 0727                     u1081 03BE                     u1065 03AC  
                   u1241 04D8                     u1161 0427                     u1321 0726  
                   u1305 06E8                     u1170 044D                     u1090 0233  
                   u1330 0733                     u1250 0624                     u1171 044C  
                   u1163 0424                     u1091 0232                     u1331 0732  
                   u1315 0717                     u1251 0623                     u1180 0456  
                   u1340 074A                     u1260 0643                     u1500 058F  
                   _IOCB 0096                     u1245 04D5                     u1181 0455  
                   u1341 0749                     u1261 0642                     u1501 058E  
                   u1190 0462                     u1350 0762                     u1270 0684  
                   u1510 0598                     u1191 0461                     u1351 0761  
                   u1335 072F                     u1271 0683                     u1511 0597  
                   u1280 06B5                     u1520 05BB                     u1281 06B4  
                   u1521 05BA                     u1370 07D5                     u1290 06E3  
                   u1530 05D4                     u1371 07D4                     u1291 06E2  
                   u1531 05D3                     u1380 07E9                     u1540 05D9  
                   u1381 07E8                     u1365 0777                     u1541 05D8  
                   u1607 0208                     u1617 0223                     u1490 04E5  
                   u1627 01D3                     u1637 01EE                     u1557 04FA  
                   u1567 060A                     u1577 0199                     u1587 0112  
                   u1597 048C             __CFG_WRT$OFF 0000               GotoX@point 0020  
             GotoX@speed 0024                     _main 04DB       __size_of_LCD_Clear 0010  
                   btemp 007E                     start 0000            _LCD_String_xy 0286  
       __end_of_LCD_Char 0229         __end_of_LCD_Init 01BF                    ?_main 0070  
        __end_of___awdiv 03CB            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
        __end_of___lldiv 035A          ___awdiv@divisor 0070          __end_of___llmod 0286  
        ___awdiv@counter 0075                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _GotoX 03CB          __end_of_dpowers 003B  
        __end_of_isdigit 013F           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E      __size_of_LCD_String 0028  
        __end_of_sprintf 07F3           ?_LCD_String_xy 0075          __initialization 07F3  
           __end_of_main 0616                   ??_main 0040        __end_of_LCD_Clear 0118  
                 ?_GotoX 0020         ___llmod@dividend 0024         ___awdiv@dividend 0072  
                 _ANSELH 0189         LCD_String_xy@msg 0076         LCD_String_xy@pos 0075  
       LCD_String_xy@row 0079                   GotoX@i 0039         __end_of_delay_us 012B  
         __CFG_PWRTE$OFF 0000                   ___wmul 0167                ??___awdiv 0074  
              ??___lldiv 0078                ??___llmod 0028         ___awdiv@quotient 0077  
   __size_of_LCD_Command 0035                   main@to 0054                ??_isdigit 0070  
              ??_sprintf 002F                ?_LCD_Char 0070  __end_of__initialization 07FC  
              ?_LCD_Init 0070          ??_LCD_String_xy 0078            __end_of_GotoX 04DB  
         __pcstackCOMMON 0070             ??_LCD_String 0075                  ??_GotoX 0025  
           sprintf@width 003D               __pbssBANK1 00A0               ??_LCD_Char 0070  
             ??_LCD_Init 0073       __end_of_LCD_String 0167               __pmaintext 04DB  
                ?___wmul 0070                ?_delay_us 0070               __stringtab 0003  
          LCD_String@msg 0073                  ___awdiv 035A                  ___lldiv 02ED  
        __size_of___wmul 0028                  ___llmod 0229                  __ptext1 0616  
                __ptext2 012B                  __ptext3 0167                  __ptext4 0229  
                __ptext5 02ED                  __ptext6 018F                  __ptext7 0108  
                __ptext8 03CB                  __ptext9 0118                  _dpowers 0013  
                _isdigit 012B               ??_delay_us 0072                _LCD_Clear 0108  
                _sprintf 0616                  clrloop0 0101                  main@str 0044  
   end_of_initialization 07FC           LCD_Command@cmd 0072          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                _PORTAbits 0005                _PORTBbits 0006  
              _PORTDbits 0008               ?_LCD_Clear 0070                GotoX@wait 003D  
      __size_of_LCD_Char 0035        __size_of_LCD_Init 0030         _current_position 00A0  
          ??_LCD_Command 0070           __end_of___wmul 018F      start_initialization 07F3  
        ___llmod@divisor 0020          ___llmod@counter 0029    __end_of_LCD_String_xy 02ED  
               ??___wmul 0074      __end_of_LCD_Command 01F4                ___latbits 0002  
          __pcstackBANK0 0020              ??_LCD_Clear 0073        __size_of_delay_us 0013  
            sprintf@flag 0034              sprintf@prec 0035                 ?___awdiv 0070  
               ?___lldiv 0070                 ?___llmod 0020                __pstrings 0003  
               ?_isdigit 0070           __size_of_GotoX 0110    LCD_String_xy@location 007A  
               ?_sprintf 002A                 _LCD_Char 01F4                 _LCD_Init 018F  
         ___wmul@product 0074                clear_ram0 0100                main@F1538 00B2  
            _LCD_Command 01BF              __stringbase 0012        ___wmul@multiplier 0070  
               GotoX@str 0029         __size_of___awdiv 0071         __size_of___lldiv 006D  
       __size_of___llmod 005D       __end_of__stringtab 0013              _isdigit$749 0070  
             sprintf@val 0037         __size_of_isdigit 0014                 _delay_us 0118  
               __ptext10 035A                 __ptext11 0286                 __ptext12 013F  
               __ptext13 01F4                 __ptext14 01BF         __size_of_sprintf 01DD  
          __size_of_main 013B               _LCD_String 013F              delay_us@val 0070  
               isdigit@c 0071                sprintf@ap 003B                sprintf@sp 003C  
       ___lldiv@dividend 0074                stringcode 000D                 sprintf@c 003F  
               sprintf@f 002A         ___lldiv@quotient 0079                 stringdir 000D  
               stringtab 0003   __size_of_LCD_String_xy 0067  
